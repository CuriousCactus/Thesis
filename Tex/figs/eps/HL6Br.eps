%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 278 575 513
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D
%%For: 
%%Title: 
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
190 80 setsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
190.000 0.00000 l
190.000 80.0000 l
0.00000 80.0000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
190.000 0.00000 l
190.000 80.0000 l
0.00000 80.0000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
190.000 0.00000 l
190.000 80.0000 l
0.00000 80.0000 l
0.00000 0.00000 l
h
f
cliprestore
0 0 190 80 rc
q
0.00000 0.00000 0.00000 RG
newpath
17.9311 62.1963 m
36.9391 62.1963 l
37.1742 62.1963 37.3647 62.0058 37.3647 61.7707  c
37.3647 61.5356 37.1742 61.3451 36.9391 61.3451  c
17.9311 61.3451 l
17.6960 61.3451 17.5055 61.5356 17.5055 61.7707  c
17.5055 62.0058 17.6960 62.1963 17.9311 62.1963  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
37.3439 61.9023 m
43.2191 43.8251 l
43.2917 43.6015 43.1695 43.3614 42.9459 43.2888  c
42.7223 43.2161 42.4822 43.3384 42.4096 43.5620  c
36.5344 61.6392 l
36.4617 61.8627 36.5840 62.1028 36.8076 62.1755  c
37.0312 62.2481 37.2712 62.1258 37.3439 61.9023  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
43.0645 43.3492 m
27.6853 32.1771 l
27.4951 32.0389 27.2290 32.0811 27.0908 32.2713  c
26.9526 32.4615 26.9948 32.7276 27.1850 32.8658  c
42.5642 44.0378 l
42.7544 44.1760 43.0205 44.1339 43.1586 43.9437  c
43.2968 43.7535 43.2547 43.4874 43.0645 43.3492  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
27.1850 32.1771 m
17.6237 39.1238 l
17.4336 39.2620 17.3914 39.5281 17.5296 39.7183  c
17.6678 39.9085 17.9339 39.9506 18.1241 39.8124  c
27.6853 32.8657 l
27.8755 32.7275 27.9176 32.4615 27.7794 32.2713  c
27.6412 32.0811 27.3752 32.0389 27.1850 32.1771  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
14.1062 51.3746 m
17.5264 61.9022 l
17.5990 62.1258 17.8390 62.2481 18.0626 62.1755  c
18.2862 62.1028 18.4085 61.8628 18.3359 61.6392  c
14.9157 51.1116 l
14.8430 50.8880 14.6030 50.7657 14.3794 50.8383  c
14.1558 50.9110 14.0335 51.1510 14.1062 51.3746  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
25.3463 33.7298 m
25.3463 33.9649 25.5368 34.1554 25.7719 34.1554  c
26.0070 34.1554 26.1975 33.9649 26.1975 33.7298  c
26.1975 21.3095 l
26.1975 21.0744 26.0070 20.8839 25.7719 20.8839  c
25.5368 20.8839 25.3463 21.0744 25.3463 21.3095  c
h
28.6727 33.7296 m
28.6727 33.9647 28.8632 34.1552 29.0983 34.1552  c
29.3334 34.1552 29.5239 33.9647 29.5239 33.7296  c
29.5239 21.3095 l
29.5239 21.0744 29.3334 20.8839 29.0983 20.8839  c
28.8632 20.8839 28.6727 21.0744 28.6727 21.3095  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
42.8143 43.6935 m
42.9459 44.0983 l
55.7416 41.5950 l
55.1234 39.6930 l
54.5053 37.7909 l
42.6828 43.2888 l
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
66.0377 41.2808 m
77.1408 47.6909 l
77.3444 47.8084 77.6046 47.7387 77.7222 47.5351  c
77.8397 47.3315 77.7700 47.0713 77.5664 46.9537  c
66.4633 40.5436 l
66.2597 40.4261 65.9994 40.4958 65.8819 40.6994  c
65.7644 40.9030 65.8341 41.1632 66.0377 41.2808  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
77.5664 47.6909 m
94.0285 38.1869 l
94.2321 38.0694 94.3018 37.8091 94.1842 37.6055  c
94.0667 37.4019 93.8065 37.3322 93.6029 37.4497  c
77.1408 46.9537 l
76.9372 47.0713 76.8675 47.3315 76.9850 47.5351  c
77.1026 47.7387 77.3628 47.8084 77.5664 47.6909  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
93.6029 38.1869 m
110.063 47.6909 l
110.266 47.8084 110.526 47.7387 110.644 47.5351  c
110.762 47.3315 110.692 47.0713 110.488 46.9538  c
94.0285 37.4498 l
93.8249 37.3322 93.5647 37.4019 93.4471 37.6055  c
93.3296 37.8091 93.3993 38.0693 93.6029 38.1869  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
110.488 47.6909 m
126.950 38.1869 l
127.154 38.0694 127.224 37.8091 127.106 37.6055  c
126.989 37.4019 126.728 37.3322 126.525 37.4497  c
110.063 46.9537 l
109.859 47.0713 109.789 47.3315 109.907 47.5351  c
110.024 47.7387 110.285 47.8084 110.488 47.6909  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
126.525 38.1869 m
142.987 47.6909 l
143.190 47.8084 143.451 47.7387 143.568 47.5351  c
143.686 47.3315 143.616 47.0713 143.412 46.9537  c
126.950 37.4497 l
126.747 37.3322 126.486 37.4019 126.369 37.6055  c
126.251 37.8091 126.321 38.0694 126.525 38.1869  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
143.412 47.6909 m
159.872 38.1869 l
160.076 38.0693 160.145 37.8091 160.028 37.6055  c
159.910 37.4019 159.650 37.3322 159.447 37.4498  c
142.987 46.9538 l
142.783 47.0713 142.713 47.3315 142.831 47.5351  c
142.949 47.7387 143.209 47.8084 143.412 47.6909  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
159.447 38.1869 m
168.350 43.3273 l
168.554 43.4448 168.814 43.3751 168.932 43.1715  c
169.049 42.9679 168.979 42.7076 168.776 42.5901  c
159.872 37.4497 l
159.669 37.3322 159.408 37.4019 159.291 37.6055  c
159.173 37.8091 159.243 38.0694 159.447 38.1869  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
79.4424 46.3621 m
79.4424 46.1270 79.2519 45.9365 79.0168 45.9365  c
78.7817 45.9365 78.5912 46.1270 78.5912 46.3621  c
78.5912 58.6905 l
78.5912 58.9256 78.7817 59.1161 79.0168 59.1161  c
79.2519 59.1161 79.4424 58.9256 79.4424 58.6905  c
h
76.1160 46.3621 m
76.1160 46.1270 75.9255 45.9365 75.6904 45.9365  c
75.4553 45.9365 75.2648 46.1270 75.2648 46.3621  c
75.2648 58.6905 l
75.2648 58.9256 75.4553 59.1161 75.6904 59.1161  c
75.9255 59.1161 76.1160 58.9256 76.1160 58.6905  c
h
f
Q
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 7.60510 35.6935 ] concat
newpath
.578125 8.81250 m
.578125 7.38542 .960938 6.26823 1.72656 5.46094  c
2.49219 4.65365 3.47917 4.25000 4.68750 4.25000  c
5.48958 4.25000 6.20833 4.44010 6.84375 4.82031  c
7.47917 5.20052 7.96354 5.72917 8.29688 6.40625  c
8.63021 7.08333 8.79688 7.85417 8.79688 8.71875  c
8.79688 9.58333 8.61979 10.3594 8.26562 11.0469  c
7.91146 11.7344 7.41406 12.2552 6.77344 12.6094  c
6.13281 12.9635 5.43750 13.1406 4.68750 13.1406  c
3.87500 13.1406 3.15104 12.9453 2.51562 12.5547  c
1.88021 12.1641 1.39844 11.6328 1.07031 10.9609  c
.742188 10.2891 .578125 9.57292 .578125 8.81250  c
h
1.75000 8.82812 m
1.75000 9.86979 2.02865 10.6875 2.58594 11.2812  c
3.14323 11.8750 3.84375 12.1719 4.68750 12.1719  c
5.54167 12.1719 6.24479 11.8724 6.79688 11.2734  c
7.34896 10.6745 7.62500 9.81771 7.62500 8.70312  c
7.62500 8.00521 7.50781 7.39583 7.27344 6.87500  c
7.03906 6.35417 6.69271 5.95052 6.23438 5.66406  c
5.77604 5.37760 5.26562 5.23438 4.70312 5.23438  c
3.90104 5.23438 3.20833 5.51042 2.62500 6.06250  c
2.04167 6.61458 1.75000 7.53646 1.75000 8.82812  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 22.9820 5.51343 ] concat
newpath
.578125 8.81250 m
.578125 7.38542 .960938 6.26823 1.72656 5.46094  c
2.49219 4.65365 3.47917 4.25000 4.68750 4.25000  c
5.48958 4.25000 6.20833 4.44010 6.84375 4.82031  c
7.47917 5.20052 7.96354 5.72917 8.29688 6.40625  c
8.63021 7.08333 8.79688 7.85417 8.79688 8.71875  c
8.79688 9.58333 8.61979 10.3594 8.26562 11.0469  c
7.91146 11.7344 7.41406 12.2552 6.77344 12.6094  c
6.13281 12.9635 5.43750 13.1406 4.68750 13.1406  c
3.87500 13.1406 3.15104 12.9453 2.51562 12.5547  c
1.88021 12.1641 1.39844 11.6328 1.07031 10.9609  c
.742188 10.2891 .578125 9.57292 .578125 8.81250  c
h
1.75000 8.82812 m
1.75000 9.86979 2.02865 10.6875 2.58594 11.2812  c
3.14323 11.8750 3.84375 12.1719 4.68750 12.1719  c
5.54167 12.1719 6.24479 11.8724 6.79688 11.2734  c
7.34896 10.6745 7.62500 9.81771 7.62500 8.70312  c
7.62500 8.00521 7.50781 7.39583 7.27344 6.87500  c
7.03906 6.35417 6.69271 5.95052 6.23438 5.66406  c
5.77604 5.37760 5.26562 5.23438 4.70312 5.23438  c
3.90104 5.23438 3.20833 5.51042 2.62500 6.06250  c
2.04167 6.61458 1.75000 7.53646 1.75000 8.82812  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 56.2206 16.8823 ] concat
newpath
.968750 13.0000 m
.968750 4.40625 l
2.09375 4.40625 l
2.09375 7.93750 l
6.56250 7.93750 l
6.56250 4.40625 l
7.70312 4.40625 l
7.70312 13.0000 l
6.56250 13.0000 l
6.56250 8.95312 l
2.09375 8.95312 l
2.09375 13.0000 l
.968750 13.0000 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 56.2196 29.8183 ] concat
newpath
.921875 13.0000 m
.921875 4.40625 l
2.07812 4.40625 l
6.59375 11.1562 l
6.59375 4.40625 l
7.68750 4.40625 l
7.68750 13.0000 l
6.51562 13.0000 l
2.00000 6.25000 l
2.00000 13.0000 l
.921875 13.0000 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 170.348 39.3223 ] concat
newpath
.875000 13.0000 m
.875000 4.40625 l
4.10938 4.40625 l
4.76562 4.40625 5.29167 4.49479 5.68750 4.67188  c
6.08333 4.84896 6.39323 5.11719 6.61719 5.47656  c
6.84115 5.83594 6.95312 6.21354 6.95312 6.60938  c
6.95312 6.97396 6.85417 7.31771 6.65625 7.64062  c
6.45833 7.96354 6.15625 8.22396 5.75000 8.42188  c
6.27083 8.57812 6.66927 8.84115 6.94531 9.21094  c
7.22135 9.58073 7.35938 10.0156 7.35938 10.5156  c
7.35938 10.9115 7.27604 11.2839 7.10938 11.6328  c
6.94271 11.9818 6.73438 12.2500 6.48438 12.4375  c
6.23438 12.6250 5.91927 12.7656 5.53906 12.8594  c
5.15885 12.9531 4.69792 13.0000 4.15625 13.0000  c
.875000 13.0000 l
h
2.01562 8.01562 m
3.87500 8.01562 l
4.37500 8.01562 4.73438 7.98438 4.95312 7.92188  c
5.24479 7.83854 5.46354 7.69531 5.60938 7.49219  c
5.75521 7.28906 5.82812 7.03646 5.82812 6.73438  c
5.82812 6.45312 5.76042 6.20312 5.62500 5.98438  c
5.48958 5.76562 5.29427 5.61719 5.03906 5.53906  c
4.78385 5.46094 4.34896 5.42188 3.73438 5.42188  c
2.01562 5.42188 l
2.01562 8.01562 l
h
2.01562 11.9844 m
4.15625 11.9844 l
4.52083 11.9844 4.77604 11.9688 4.92188 11.9375  c
5.19271 11.8958 5.41406 11.8203 5.58594 11.7109  c
5.75781 11.6016 5.90104 11.4427 6.01562 11.2344  c
6.13021 11.0260 6.18750 10.7865 6.18750 10.5156  c
6.18750 10.1927 6.10677 9.91146 5.94531 9.67188  c
5.78385 9.43229 5.55729 9.26562 5.26562 9.17188  c
4.97396 9.07812 4.55208 9.03125 4.00000 9.03125  c
2.01562 9.03125 l
2.01562 11.9844 l
h
8.78516 13.0000 m
8.78516 6.78125 l
9.73828 6.78125 l
9.73828 7.71875 l
9.97786 7.28125 10.1992 6.99219 10.4023 6.85156  c
10.6055 6.71094 10.8320 6.64062 11.0820 6.64062  c
11.4362 6.64062 11.7956 6.75000 12.1602 6.96875  c
11.8008 7.95312 l
11.5404 7.79688 11.2852 7.71875 11.0352 7.71875  c
10.7956 7.71875 10.5846 7.78906 10.4023 7.92969  c
10.2201 8.07031 10.0924 8.26562 10.0195 8.51562  c
9.89453 8.89062 9.83203 9.29688 9.83203 9.73438  c
9.83203 13.0000 l
8.78516 13.0000 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 72.9005 58.3303 ] concat
newpath
.578125 8.81250 m
.578125 7.38542 .960938 6.26823 1.72656 5.46094  c
2.49219 4.65365 3.47917 4.25000 4.68750 4.25000  c
5.48958 4.25000 6.20833 4.44010 6.84375 4.82031  c
7.47917 5.20052 7.96354 5.72917 8.29688 6.40625  c
8.63021 7.08333 8.79688 7.85417 8.79688 8.71875  c
8.79688 9.58333 8.61979 10.3594 8.26562 11.0469  c
7.91146 11.7344 7.41406 12.2552 6.77344 12.6094  c
6.13281 12.9635 5.43750 13.1406 4.68750 13.1406  c
3.87500 13.1406 3.15104 12.9453 2.51562 12.5547  c
1.88021 12.1641 1.39844 11.6328 1.07031 10.9609  c
.742188 10.2891 .578125 9.57292 .578125 8.81250  c
h
1.75000 8.82812 m
1.75000 9.86979 2.02865 10.6875 2.58594 11.2812  c
3.14323 11.8750 3.84375 12.1719 4.68750 12.1719  c
5.54167 12.1719 6.24479 11.8724 6.79688 11.2734  c
7.34896 10.6745 7.62500 9.81771 7.62500 8.70312  c
7.62500 8.00521 7.50781 7.39583 7.27344 6.87500  c
7.03906 6.35417 6.69271 5.95052 6.23438 5.66406  c
5.77604 5.37760 5.26562 5.23438 4.70312 5.23438  c
3.90104 5.23438 3.20833 5.51042 2.62500 6.06250  c
2.04167 6.61458 1.75000 7.53646 1.75000 8.82812  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
Q
1.00000 1.00000 1.00000 RG
q
cliprestore
newpath
0.00000 0.00000 m
0.00000 80.0000 l
190.000 80.0000 l
190.000 0.00000 l
h
W
cliprestore
newpath
0.00000 0.00000 m
0.00000 80.0000 l
190.000 80.0000 l
190.000 0.00000 l
h
W
Q

%%Trailer
%%EOF
