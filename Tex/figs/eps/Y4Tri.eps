%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 278 575 513
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D
%%For: 
%%Title: 
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
266 112 setsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
266.000 0.00000 l
266.000 112.000 l
0.00000 112.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
266.000 0.00000 l
266.000 112.000 l
0.00000 112.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
266.000 0.00000 l
266.000 112.000 l
0.00000 112.000 l
0.00000 0.00000 l
h
f
cliprestore
0 0 266 112 rc
q
0.00000 0.00000 0.00000 RG
newpath
41.6720 36.2209 m
25.2099 45.7249 l
25.0063 45.8424 24.9366 46.1027 25.0541 46.3063  c
25.1717 46.5099 25.4319 46.5796 25.6355 46.4620  c
42.0976 36.9580 l
42.3012 36.8405 42.3709 36.5803 42.2534 36.3767  c
42.1358 36.1731 41.8756 36.1033 41.6720 36.2209  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
58.5596 45.7249 m
42.0976 36.2209 l
41.8940 36.1033 41.6337 36.1731 41.5162 36.3767  c
41.3987 36.5803 41.4684 36.8405 41.6720 36.9580  c
58.1341 46.4620 l
58.3377 46.5796 58.5979 46.5099 58.7154 46.3063  c
58.8330 46.1027 58.7632 45.8424 58.5596 45.7249  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
74.5938 36.2209 m
58.1340 45.7249 l
57.9305 45.8425 57.8607 46.1027 57.9783 46.3063  c
58.0959 46.5099 58.3561 46.5796 58.5597 46.4620  c
75.0194 36.9580 l
75.2230 36.8405 75.2928 36.5802 75.1752 36.3767  c
75.0576 36.1731 74.7974 36.1033 74.5938 36.2209  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
91.4815 45.7249 m
75.0194 36.2209 l
74.8158 36.1033 74.5556 36.1731 74.4381 36.3767  c
74.3205 36.5803 74.3902 36.8405 74.5938 36.9580  c
91.0559 46.4620 l
91.2595 46.5796 91.5197 46.5099 91.6373 46.3063  c
91.7548 46.1027 91.6851 45.8424 91.4815 45.7249  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
101.378 39.7658 m
91.0559 45.7249 l
90.8523 45.8424 90.7826 46.1027 90.9001 46.3063  c
91.0177 46.5099 91.2779 46.5796 91.4815 46.4620  c
101.803 40.5029 l
102.007 40.3854 102.077 40.1252 101.959 39.9216  c
101.842 39.7180 101.581 39.6483 101.378 39.7658  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
189.824 64.7329 m
173.364 74.2369 l
173.160 74.3545 173.091 74.6147 173.208 74.8183  c
173.326 75.0219 173.586 75.0916 173.790 74.9740  c
190.249 65.4700 l
190.453 65.3525 190.523 65.0922 190.405 64.8887  c
190.288 64.6851 190.027 64.6153 189.824 64.7329  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
141.078 36.5895 m
141.078 25.3776 l
141.078 25.1425 140.888 24.9520 140.653 24.9520  c
140.418 24.9520 140.227 25.1425 140.227 25.3776  c
140.227 36.5895 l
140.227 36.8246 140.418 37.0151 140.653 37.0151  c
140.888 37.0151 141.078 36.8246 141.078 36.5895  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
146.961 14.4307 m
157.328 8.44604 l
157.531 8.32850 157.601 8.06827 157.483 7.86468  c
157.366 7.66108 157.106 7.59135 156.902 7.70889  c
146.536 13.6936 l
146.332 13.8111 146.262 14.0713 146.380 14.2749  c
146.497 14.4785 146.758 14.5483 146.961 14.4307  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
124.406 45.7249 m
114.084 39.7658 l
113.880 39.6483 113.620 39.7180 113.502 39.9216  c
113.385 40.1252 113.455 40.3854 113.658 40.5029  c
123.980 46.4620 l
124.184 46.5796 124.444 46.5099 124.561 46.3063  c
124.679 46.1027 124.609 45.8424 124.406 45.7249  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
123.980 64.7329 m
113.614 70.7176 l
113.410 70.8351 113.341 71.0953 113.458 71.2989  c
113.576 71.5025 113.836 71.5723 114.039 71.4547  c
124.406 65.4700 l
124.609 65.3525 124.679 65.0923 124.561 64.8887  c
124.444 64.6851 124.184 64.6153 123.980 64.7329  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
101.848 70.7176 m
91.4815 64.7329 l
91.2779 64.6153 91.0177 64.6851 90.9001 64.8887  c
90.7826 65.0923 90.8523 65.3525 91.0559 65.4700  c
101.422 71.4547 l
101.626 71.5723 101.886 71.5025 102.003 71.2989  c
102.121 71.0953 102.051 70.8351 101.848 70.7176  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
157.328 65.4700 m
157.531 65.3525 157.601 65.0923 157.483 64.8887  c
157.366 64.6851 157.106 64.6153 156.902 64.7329  c
140.440 74.2369 l
140.236 74.3544 140.167 74.6147 140.284 74.8183  c
140.402 75.0219 140.662 75.0916 140.865 74.9740  c
h
153.633 63.7623 m
153.836 63.6447 153.906 63.3845 153.788 63.1809  c
153.671 62.9773 153.411 62.9076 153.207 63.0251  c
140.809 70.1831 l
140.605 70.3006 140.535 70.5608 140.653 70.7644  c
140.770 70.9680 141.031 71.0378 141.234 70.9202  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
123.980 65.4700 m
140.440 74.9740 l
140.643 75.0916 140.904 75.0219 141.021 74.8183  c
141.139 74.6147 141.069 74.3545 140.865 74.2369  c
124.406 64.7329 l
124.202 64.6153 123.942 64.6851 123.824 64.8887  c
123.707 65.0922 123.776 65.3525 123.980 65.4700  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
127.945 48.4395 m
127.945 48.2044 127.754 48.0139 127.519 48.0139  c
127.284 48.0139 127.094 48.2044 127.094 48.4395  c
127.094 62.7555 l
127.094 62.9906 127.284 63.1811 127.519 63.1811  c
127.754 63.1811 127.945 62.9906 127.945 62.7555  c
h
124.618 46.0935 m
124.618 45.8584 124.428 45.6679 124.193 45.6679  c
123.958 45.6679 123.767 45.8584 123.767 46.0935  c
123.767 65.1015 l
123.767 65.3366 123.958 65.5271 124.193 65.5271  c
124.428 65.5271 124.618 65.3366 124.618 65.1015  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
140.440 36.2209 m
123.980 45.7249 l
123.776 45.8425 123.707 46.1027 123.824 46.3063  c
123.942 46.5099 124.202 46.5796 124.406 46.4620  c
140.865 36.9580 l
141.069 36.8405 141.139 36.5802 141.021 36.3767  c
140.904 36.1731 140.643 36.1033 140.440 36.2209  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
153.207 48.1698 m
153.411 48.2873 153.671 48.2176 153.788 48.0140  c
153.906 47.8104 153.836 47.5502 153.633 47.4326  c
141.234 40.2747 l
141.031 40.1572 140.770 40.2269 140.653 40.4305  c
140.535 40.6341 140.605 40.8943 140.809 41.0119  c
h
156.902 46.4620 m
157.106 46.5796 157.366 46.5099 157.483 46.3063  c
157.601 46.1027 157.531 45.8424 157.328 45.7249  c
140.865 36.2209 l
140.662 36.1033 140.402 36.1731 140.284 36.3767  c
140.167 36.5803 140.236 36.8405 140.440 36.9580  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
157.540 65.1015 m
157.540 46.0935 l
157.540 45.8584 157.350 45.6679 157.115 45.6679  c
156.880 45.6679 156.689 45.8584 156.689 46.0935  c
156.689 65.1015 l
156.689 65.3366 156.880 65.5271 157.115 65.5271  c
157.350 65.5271 157.540 65.3366 157.540 65.1015  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
173.790 74.2369 m
157.328 64.7329 l
157.124 64.6153 156.864 64.6851 156.746 64.8887  c
156.629 65.0923 156.698 65.3525 156.902 65.4700  c
173.364 74.9740 l
173.568 75.0916 173.828 75.0219 173.945 74.8183  c
174.063 74.6147 173.993 74.3544 173.790 74.2369  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
222.535 46.0935 m
222.535 57.5788 l
222.535 57.8139 222.726 58.0044 222.961 58.0044  c
223.196 58.0044 223.386 57.8139 223.386 57.5788  c
223.386 46.0935 l
223.386 45.8584 223.196 45.6679 222.961 45.6679  c
222.726 45.6679 222.535 45.8584 222.535 46.0935  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
217.439 68.7808 m
217.642 68.6633 217.712 68.4031 217.595 68.1995  c
217.477 67.9959 217.217 67.9262 217.013 68.0437  c
206.286 74.2369 l
206.082 74.3544 206.013 74.6147 206.130 74.8183  c
206.248 75.0219 206.508 75.0916 206.711 74.9740  c
h
215.776 65.9001 m
215.979 65.7825 216.049 65.5223 215.931 65.3187  c
215.814 65.1151 215.554 65.0454 215.350 65.1629  c
206.654 70.1831 l
206.451 70.3007 206.381 70.5609 206.499 70.7645  c
206.616 70.9681 206.876 71.0378 207.080 70.9203  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
206.711 74.2369 m
190.249 64.7329 l
190.046 64.6153 189.786 64.6851 189.668 64.8887  c
189.550 65.0923 189.620 65.3525 189.824 65.4700  c
206.286 74.9740 l
206.489 75.0916 206.750 75.0219 206.867 74.8183  c
206.985 74.6147 206.915 74.3544 206.711 74.2369  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
189.611 65.1015 m
189.611 65.3366 189.801 65.5271 190.037 65.5271  c
190.272 65.5271 190.462 65.3366 190.462 65.1015  c
190.462 46.0935 l
190.462 45.8584 190.272 45.6679 190.037 45.6679  c
189.801 45.6679 189.611 45.8584 189.611 46.0935  c
h
192.937 62.7553 m
192.937 62.9904 193.128 63.1809 193.363 63.1809  c
193.598 63.1809 193.789 62.9904 193.789 62.7553  c
193.789 48.4396 l
193.789 48.2045 193.598 48.0140 193.363 48.0140  c
193.128 48.0140 192.937 48.2045 192.937 48.4396  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
190.249 46.4620 m
201.352 40.0519 l
201.556 39.9344 201.626 39.6741 201.508 39.4705  c
201.391 39.2669 201.131 39.1972 200.927 39.3148  c
189.824 45.7249 l
189.620 45.8424 189.550 46.1027 189.668 46.3063  c
189.786 46.5099 190.046 46.5796 190.249 46.4620  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
219.053 48.1698 m
219.257 48.2873 219.517 48.2176 219.634 48.0140  c
219.752 47.8104 219.682 47.5502 219.479 47.4326  c
210.783 42.4125 l
210.579 42.2949 210.319 42.3647 210.202 42.5683  c
210.084 42.7719 210.154 43.0321 210.357 43.1496  c
h
222.748 46.4620 m
222.952 46.5796 223.212 46.5099 223.329 46.3063  c
223.447 46.1027 223.377 45.8424 223.174 45.7249  c
212.446 39.5317 l
212.243 39.4142 211.982 39.4839 211.865 39.6875  c
211.747 39.8911 211.817 40.1513 212.021 40.2688  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
206.073 74.6055 m
206.073 86.0908 l
206.073 86.3259 206.264 86.5164 206.499 86.5164  c
206.734 86.5164 206.924 86.3259 206.924 86.0908  c
206.924 74.6055 l
206.924 74.3704 206.734 74.1799 206.499 74.1799  c
206.264 74.1799 206.073 74.3704 206.073 74.6055  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
223.174 46.4620 m
234.277 40.0519 l
234.480 39.9344 234.550 39.6741 234.432 39.4705  c
234.315 39.2669 234.055 39.1972 233.851 39.3148  c
222.748 45.7249 l
222.544 45.8424 222.475 46.1027 222.592 46.3063  c
222.710 46.5099 222.970 46.5796 223.174 46.4620  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
27.2988 49.3427 m
27.5024 49.2251 27.5721 48.9649 27.4546 48.7613  c
27.3370 48.5577 27.0768 48.4880 26.8732 48.6056  c
10.4134 58.1096 l
10.2098 58.2271 10.1401 58.4874 10.2577 58.6909  c
10.3752 58.8945 10.6355 58.9643 10.8391 58.8467  c
h
25.6355 46.4620 m
25.8391 46.3445 25.9088 46.0842 25.7913 45.8807  c
25.6737 45.6771 25.4135 45.6073 25.2099 45.7249  c
8.75011 55.2289 l
8.54652 55.3465 8.47681 55.6067 8.59436 55.8103  c
8.71192 56.0139 8.97214 56.0836 9.17573 55.9660  c
h
23.9722 43.5814 m
24.1758 43.4638 24.2455 43.2036 24.1279 43.0000  c
24.0104 42.7964 23.7502 42.7267 23.5466 42.8442  c
7.08679 52.3482 l
6.88320 52.4658 6.81348 52.7260 6.93104 52.9296  c
7.04859 53.1332 7.30882 53.2029 7.51241 53.0854  c
h
f
Q
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 218.289 57.1015 ] concat
newpath
.921875 13.0000 m
.921875 4.40625 l
2.07812 4.40625 l
6.59375 11.1562 l
6.59375 4.40625 l
7.68750 4.40625 l
7.68750 13.0000 l
6.51562 13.0000 l
2.00000 6.25000 l
2.00000 13.0000 l
.921875 13.0000 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 201.827 28.5895 ] concat
newpath
.921875 13.0000 m
.921875 4.40625 l
2.07812 4.40625 l
6.59375 11.1562 l
6.59375 4.40625 l
7.68750 4.40625 l
7.68750 13.0000 l
6.51562 13.0000 l
2.00000 6.25000 l
2.00000 13.0000 l
.921875 13.0000 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 201.827 85.6135 ] concat
newpath
.921875 13.0000 m
.921875 4.40625 l
2.07812 4.40625 l
6.59375 11.1562 l
6.59375 4.40625 l
7.68750 4.40625 l
7.68750 13.0000 l
6.51562 13.0000 l
2.00000 6.25000 l
2.00000 13.0000 l
.921875 13.0000 l
h
9.63477 13.0000 m
9.63477 4.40625 l
10.7598 4.40625 l
10.7598 7.93750 l
15.2285 7.93750 l
15.2285 4.40625 l
16.3691 4.40625 l
16.3691 13.0000 l
15.2285 13.0000 l
15.2285 8.95312 l
10.7598 8.95312 l
10.7598 13.0000 l
9.63477 13.0000 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 220.186 93.4582 ] concat
newpath
4.03125 7.32812 m
4.03125 8.00000 l
.250000 8.00000 l
.239583 7.83333 .265625 7.67188 .328125 7.51562  c
.421875 7.25521 .575521 7.00000 .789062 6.75000  c
1.00260 6.50000 1.30729 6.20833 1.70312 5.87500  c
2.32812 5.36458 2.75000 4.96094 2.96875 4.66406  c
3.18750 4.36719 3.29688 4.08854 3.29688 3.82812  c
3.29688 3.54688 3.19792 3.30990 3.00000 3.11719  c
2.80208 2.92448 2.54167 2.82812 2.21875 2.82812  c
1.88542 2.82812 1.61719 2.92969 1.41406 3.13281  c
1.21094 3.33594 1.10417 3.61979 1.09375 3.98438  c
.375000 3.90625 l
.427083 3.36458 .614583 2.95312 .937500 2.67188  c
1.26042 2.39062 1.69271 2.25000 2.23438 2.25000  c
2.78646 2.25000 3.22135 2.40104 3.53906 2.70312  c
3.85677 3.00521 4.01562 3.38542 4.01562 3.84375  c
4.01562 4.07292 3.96875 4.29688 3.87500 4.51562  c
3.78125 4.73438 3.62760 4.96615 3.41406 5.21094  c
3.20052 5.45573 2.83854 5.79167 2.32812 6.21875  c
1.91146 6.57292 1.64323 6.81250 1.52344 6.93750  c
1.40365 7.06250 1.30208 7.19271 1.21875 7.32812  c
4.03125 7.32812 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 234.751 28.5895 ] concat
newpath
.921875 13.0000 m
.921875 4.40625 l
2.07812 4.40625 l
6.59375 11.1562 l
6.59375 4.40625 l
7.68750 4.40625 l
7.68750 13.0000 l
6.51562 13.0000 l
2.00000 6.25000 l
2.00000 13.0000 l
.921875 13.0000 l
h
9.63477 13.0000 m
9.63477 4.40625 l
10.7598 4.40625 l
10.7598 7.93750 l
15.2285 7.93750 l
15.2285 4.40625 l
16.3691 4.40625 l
16.3691 13.0000 l
15.2285 13.0000 l
15.2285 8.95312 l
10.7598 8.95312 l
10.7598 13.0000 l
9.63477 13.0000 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 253.110 36.4342 ] concat
newpath
4.03125 7.32812 m
4.03125 8.00000 l
.250000 8.00000 l
.239583 7.83333 .265625 7.67188 .328125 7.51562  c
.421875 7.25521 .575521 7.00000 .789062 6.75000  c
1.00260 6.50000 1.30729 6.20833 1.70312 5.87500  c
2.32812 5.36458 2.75000 4.96094 2.96875 4.66406  c
3.18750 4.36719 3.29688 4.08854 3.29688 3.82812  c
3.29688 3.54688 3.19792 3.30990 3.00000 3.11719  c
2.80208 2.92448 2.54167 2.82812 2.21875 2.82812  c
1.88542 2.82812 1.61719 2.92969 1.41406 3.13281  c
1.21094 3.33594 1.10417 3.61979 1.09375 3.98438  c
.375000 3.90625 l
.427083 3.36458 .614583 2.95312 .937500 2.67188  c
1.26042 2.39062 1.69271 2.25000 2.23438 2.25000  c
2.78646 2.25000 3.22135 2.40104 3.53906 2.70312  c
3.85677 3.00521 4.01562 3.38542 4.01562 3.84375  c
4.01562 4.07292 3.96875 4.29688 3.87500 4.51562  c
3.78125 4.73438 3.62760 4.96615 3.41406 5.21094  c
3.20052 5.45573 2.83854 5.79167 2.32812 6.21875  c
1.91146 6.57292 1.64323 6.81250 1.52344 6.93750  c
1.40365 7.06250 1.30208 7.19271 1.21875 7.32812  c
4.03125 7.32812 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 136.200 9.58146 ] concat
newpath
.578125 8.81250 m
.578125 7.38542 .960938 6.26823 1.72656 5.46094  c
2.49219 4.65365 3.47917 4.25000 4.68750 4.25000  c
5.48958 4.25000 6.20833 4.44010 6.84375 4.82031  c
7.47917 5.20052 7.96354 5.72917 8.29688 6.40625  c
8.63021 7.08333 8.79688 7.85417 8.79688 8.71875  c
8.79688 9.58333 8.61979 10.3594 8.26562 11.0469  c
7.91146 11.7344 7.41406 12.2552 6.77344 12.6094  c
6.13281 12.9635 5.43750 13.1406 4.68750 13.1406  c
3.87500 13.1406 3.15104 12.9453 2.51562 12.5547  c
1.88021 12.1641 1.39844 11.6328 1.07031 10.9609  c
.742188 10.2891 .578125 9.57292 .578125 8.81250  c
h
1.75000 8.82812 m
1.75000 9.86979 2.02865 10.6875 2.58594 11.2812  c
3.14323 11.8750 3.84375 12.1719 4.68750 12.1719  c
5.54167 12.1719 6.24479 11.8724 6.79688 11.2734  c
7.34896 10.6745 7.62500 9.81771 7.62500 8.70312  c
7.62500 8.00521 7.50781 7.39583 7.27344 6.87500  c
7.03906 6.35417 6.69271 5.95052 6.23438 5.66406  c
5.77604 5.37760 5.26562 5.23438 4.70312 5.23438  c
3.90104 5.23438 3.20833 5.51042 2.62500 6.06250  c
2.04167 6.61458 1.75000 7.53646 1.75000 8.82812  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 103.278 28.5895 ] concat
newpath
.578125 8.81250 m
.578125 7.38542 .960938 6.26823 1.72656 5.46094  c
2.49219 4.65365 3.47917 4.25000 4.68750 4.25000  c
5.48958 4.25000 6.20833 4.44010 6.84375 4.82031  c
7.47917 5.20052 7.96354 5.72917 8.29688 6.40625  c
8.63021 7.08333 8.79688 7.85417 8.79688 8.71875  c
8.79688 9.58333 8.61979 10.3594 8.26562 11.0469  c
7.91146 11.7344 7.41406 12.2552 6.77344 12.6094  c
6.13281 12.9635 5.43750 13.1406 4.68750 13.1406  c
3.87500 13.1406 3.15104 12.9453 2.51562 12.5547  c
1.88021 12.1641 1.39844 11.6328 1.07031 10.9609  c
.742188 10.2891 .578125 9.57292 .578125 8.81250  c
h
1.75000 8.82812 m
1.75000 9.86979 2.02865 10.6875 2.58594 11.2812  c
3.14323 11.8750 3.84375 12.1719 4.68750 12.1719  c
5.54167 12.1719 6.24479 11.8724 6.79688 11.2734  c
7.34896 10.6745 7.62500 9.81771 7.62500 8.70312  c
7.62500 8.00521 7.50781 7.39583 7.27344 6.87500  c
7.03906 6.35417 6.69271 5.95052 6.23438 5.66406  c
5.77604 5.37760 5.26562 5.23438 4.70312 5.23438  c
3.90104 5.23438 3.20833 5.51042 2.62500 6.06250  c
2.04167 6.61458 1.75000 7.53646 1.75000 8.82812  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 103.278 66.6055 ] concat
newpath
.578125 8.81250 m
.578125 7.38542 .960938 6.26823 1.72656 5.46094  c
2.49219 4.65365 3.47917 4.25000 4.68750 4.25000  c
5.48958 4.25000 6.20833 4.44010 6.84375 4.82031  c
7.47917 5.20052 7.96354 5.72917 8.29688 6.40625  c
8.63021 7.08333 8.79688 7.85417 8.79688 8.71875  c
8.79688 9.58333 8.61979 10.3594 8.26562 11.0469  c
7.91146 11.7344 7.41406 12.2552 6.77344 12.6094  c
6.13281 12.9635 5.43750 13.1406 4.68750 13.1406  c
3.87500 13.1406 3.15104 12.9453 2.51562 12.5547  c
1.88021 12.1641 1.39844 11.6328 1.07031 10.9609  c
.742188 10.2891 .578125 9.57292 .578125 8.81250  c
h
1.75000 8.82812 m
1.75000 9.86979 2.02865 10.6875 2.58594 11.2812  c
3.14323 11.8750 3.84375 12.1719 4.68750 12.1719  c
5.54167 12.1719 6.24479 11.8724 6.79688 11.2734  c
7.34896 10.6745 7.62500 9.81771 7.62500 8.70312  c
7.62500 8.00521 7.50781 7.39583 7.27344 6.87500  c
7.03906 6.35417 6.69271 5.95052 6.23438 5.66406  c
5.77604 5.37760 5.26562 5.23438 4.70312 5.23438  c
3.90104 5.23438 3.20833 5.51042 2.62500 6.06250  c
2.04167 6.61458 1.75000 7.53646 1.75000 8.82812  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
q
cliprestore
newpath
0.00000 0.00000 m
0.00000 112.000 l
266.000 112.000 l
266.000 0.00000 l
h
W
cliprestore
newpath
0.00000 0.00000 m
0.00000 112.000 l
266.000 112.000 l
266.000 0.00000 l
h
W
Q

%%Trailer
%%EOF
