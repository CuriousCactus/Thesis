%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 277 575 514
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D
%%For: 
%%Title: 
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
202 86 setsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
202.000 0.00000 l
202.000 86.0000 l
0.00000 86.0000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
202.000 0.00000 l
202.000 86.0000 l
0.00000 86.0000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
202.000 0.00000 l
202.000 86.0000 l
0.00000 86.0000 l
0.00000 0.00000 l
h
f
cliprestore
0 0 202 86 rc
q
0.00000 0.00000 0.00000 RG
newpath
31.0288 27.8315 m
18.4536 35.0915 l
18.3131 35.1727 18.2649 35.3523 18.3461 35.4929  c
18.4272 35.6335 18.6069 35.6817 18.7475 35.6005  c
31.3227 28.3405 l
31.4633 28.2593 31.5114 28.0797 31.4303 27.9391  c
31.3491 27.7985 31.1694 27.7503 31.0288 27.8315  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
43.8979 35.0915 m
31.3227 27.8315 l
31.1821 27.7503 31.0024 27.7985 30.9213 27.9391  c
30.8401 28.0797 30.8883 28.2593 31.0288 28.3405  c
43.6040 35.6005 l
43.7446 35.6817 43.9243 35.6335 44.0055 35.4929  c
44.0866 35.3523 44.0385 35.1727 43.8979 35.0915  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
56.1775 27.8315 m
43.6040 35.0915 l
43.4634 35.1727 43.4153 35.3524 43.4965 35.4929  c
43.5777 35.6335 43.7573 35.6817 43.8979 35.6005  c
56.4714 28.3405 l
56.6119 28.2593 56.6601 28.0796 56.5789 27.9391  c
56.4977 27.7985 56.3180 27.7503 56.1775 27.8315  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
69.0465 35.0915 m
56.4713 27.8315 l
56.3308 27.7503 56.1511 27.7985 56.0699 27.9391  c
55.9887 28.0797 56.0369 28.2593 56.1775 28.3405  c
68.7527 35.6005 l
68.8933 35.6817 69.0730 35.6335 69.1541 35.4929  c
69.2353 35.3523 69.1871 35.1727 69.0465 35.0915  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
76.7411 30.4796 m
68.7527 35.0915 l
68.6121 35.1727 68.5639 35.3523 68.6451 35.4929  c
68.7263 35.6335 68.9060 35.6817 69.0465 35.6005  c
77.0349 30.9886 l
77.1755 30.9074 77.2237 30.7278 77.1425 30.5872  c
77.0613 30.4466 76.8817 30.3984 76.7411 30.4796  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
144.200 49.6115 m
131.627 56.8715 l
131.486 56.9527 131.438 57.1324 131.519 57.2729  c
131.601 57.4135 131.780 57.4617 131.921 57.3805  c
144.494 50.1205 l
144.635 50.0393 144.683 49.8596 144.602 49.7191  c
144.521 49.5785 144.341 49.5303 144.200 49.6115  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
106.917 28.0860 m
106.917 19.4329 l
106.917 19.2706 106.786 19.1390 106.623 19.1390  c
106.461 19.1390 106.330 19.2706 106.330 19.4329  c
106.330 28.0860 l
106.330 28.2483 106.461 28.3799 106.623 28.3799  c
106.786 28.3799 106.917 28.2483 106.917 28.0860  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
111.336 11.1846 m
119.346 6.56051 l
119.486 6.47934 119.534 6.29966 119.453 6.15907  c
119.372 6.01849 119.192 5.97034 119.052 6.05150  c
111.042 10.6755 l
110.902 10.7567 110.854 10.9364 110.935 11.0770  c
111.016 11.2176 111.196 11.2657 111.336 11.1846  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
94.1969 35.0915 m
86.2086 30.4796 l
86.0680 30.3984 85.8883 30.4466 85.8071 30.5872  c
85.7260 30.7278 85.7741 30.9074 85.9147 30.9886  c
93.9031 35.6005 l
94.0437 35.6817 94.2234 35.6335 94.3045 35.4929  c
94.3857 35.3523 94.3375 35.1727 94.1969 35.0915  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
93.9031 49.6115 m
85.8937 54.2355 l
85.7531 54.3167 85.7049 54.4964 85.7861 54.6370  c
85.8673 54.7776 86.0469 54.8257 86.1875 54.7446  c
94.1969 50.1205 l
94.3375 50.0393 94.3857 49.8597 94.3045 49.7191  c
94.2234 49.5785 94.0437 49.5303 93.9031 49.6115  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
77.0560 54.2355 m
69.0465 49.6115 l
68.9060 49.5303 68.7263 49.5785 68.6451 49.7191  c
68.5639 49.8597 68.6121 50.0393 68.7527 50.1205  c
76.7621 54.7446 l
76.9027 54.8257 77.0824 54.7776 77.1635 54.6370  c
77.2447 54.4964 77.1965 54.3167 77.0560 54.2355  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
119.346 50.1205 m
119.486 50.0393 119.534 49.8597 119.453 49.7191  c
119.372 49.5785 119.192 49.5303 119.052 49.6115  c
106.477 56.8715 l
106.336 56.9527 106.288 57.1323 106.369 57.2729  c
106.450 57.4135 106.630 57.4617 106.770 57.3805  c
h
116.504 48.7737 m
116.644 48.6925 116.693 48.5128 116.611 48.3723  c
116.530 48.2317 116.351 48.1835 116.210 48.2647  c
106.731 53.7371 l
106.591 53.8183 106.542 53.9980 106.624 54.1385  c
106.705 54.2791 106.884 54.3273 107.025 54.2461  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
93.9031 50.1205 m
106.477 57.3805 l
106.617 57.4617 106.797 57.4135 106.878 57.2729  c
106.959 57.1324 106.911 56.9527 106.770 56.8715  c
94.1970 49.6115 l
94.0564 49.5303 93.8767 49.5785 93.7955 49.7191  c
93.7143 49.8596 93.7625 50.0393 93.9031 50.1205  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
96.9311 37.1335 m
96.9311 36.9712 96.7995 36.8396 96.6372 36.8396  c
96.4749 36.8396 96.3433 36.9712 96.3433 37.1335  c
96.3433 48.0785 l
96.3433 48.2408 96.4749 48.3724 96.6372 48.3724  c
96.7995 48.3724 96.9311 48.2408 96.9311 48.0785  c
h
94.3439 35.3460 m
94.3439 35.1837 94.2123 35.0521 94.0500 35.0521  c
93.8877 35.0521 93.7561 35.1837 93.7561 35.3460  c
93.7561 49.8660 l
93.7561 50.0283 93.8877 50.1599 94.0500 50.1599  c
94.2123 50.1599 94.3439 50.0283 94.3439 49.8660  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
106.477 27.8315 m
93.9031 35.0915 l
93.7625 35.1727 93.7143 35.3524 93.7955 35.4929  c
93.8767 35.6335 94.0564 35.6817 94.1970 35.6005  c
106.770 28.3405 l
106.911 28.2593 106.959 28.0796 106.878 27.9391  c
106.797 27.7985 106.617 27.7503 106.477 27.8315  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
116.210 36.9473 m
116.351 37.0285 116.530 36.9803 116.611 36.8398  c
116.693 36.6992 116.644 36.5195 116.504 36.4383  c
107.025 30.9659 l
106.884 30.8847 106.705 30.9329 106.624 31.0735  c
106.542 31.2141 106.591 31.3937 106.731 31.4749  c
h
119.052 35.6005 m
119.192 35.6817 119.372 35.6335 119.453 35.4929  c
119.534 35.3523 119.486 35.1727 119.346 35.0915  c
106.770 27.8315 l
106.630 27.7503 106.450 27.7985 106.369 27.9391  c
106.288 28.0797 106.336 28.2593 106.477 28.3405  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
119.493 49.8660 m
119.493 35.3460 l
119.493 35.1837 119.361 35.0521 119.199 35.0521  c
119.036 35.0521 118.905 35.1837 118.905 35.3460  c
118.905 49.8660 l
118.905 50.0283 119.036 50.1599 119.199 50.1599  c
119.361 50.1599 119.493 50.0283 119.493 49.8660  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
131.921 56.8715 m
119.346 49.6115 l
119.205 49.5303 119.025 49.5785 118.944 49.7191  c
118.863 49.8597 118.911 50.0393 119.052 50.1205  c
131.627 57.3805 l
131.768 57.4617 131.947 57.4135 132.028 57.2729  c
132.110 57.1323 132.061 56.9527 131.921 56.8715  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
169.204 35.3460 m
169.204 44.2179 l
169.204 44.3802 169.335 44.5117 169.498 44.5117  c
169.660 44.5117 169.792 44.3802 169.792 44.2179  c
169.792 35.3460 l
169.792 35.1837 169.660 35.0521 169.498 35.0521  c
169.335 35.0521 169.204 35.1837 169.204 35.3460  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
165.396 52.5734 m
165.536 52.4923 165.585 52.3126 165.503 52.1720  c
165.422 52.0314 165.243 51.9832 165.102 52.0644  c
156.776 56.8715 l
156.635 56.9527 156.587 57.1323 156.668 57.2729  c
156.749 57.4135 156.929 57.4617 157.069 57.3805  c
h
164.102 50.3328 m
164.243 50.2517 164.291 50.0720 164.210 49.9314  c
164.129 49.7908 163.949 49.7426 163.808 49.8238  c
157.030 53.7372 l
156.889 53.8183 156.841 53.9980 156.922 54.1386  c
157.004 54.2792 157.183 54.3273 157.324 54.2462  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
157.069 56.8715 m
144.494 49.6115 l
144.354 49.5303 144.174 49.5785 144.093 49.7191  c
144.012 49.8597 144.060 50.0393 144.200 50.1205  c
156.776 57.3805 l
156.916 57.4617 157.096 57.4135 157.177 57.2729  c
157.258 57.1323 157.210 56.9527 157.069 56.8715  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
144.053 49.8660 m
144.053 50.0283 144.185 50.1599 144.347 50.1599  c
144.510 50.1599 144.641 50.0283 144.641 49.8660  c
144.641 35.3460 l
144.641 35.1837 144.510 35.0521 144.347 35.0521  c
144.185 35.0521 144.053 35.1837 144.053 35.3460  c
h
146.641 48.0784 m
146.641 48.2407 146.772 48.3723 146.934 48.3723  c
147.097 48.3723 147.228 48.2407 147.228 48.0784  c
147.228 37.1336 l
147.228 36.9713 147.097 36.8398 146.934 36.8398  c
146.772 36.8398 146.641 36.9713 146.641 37.1336  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
144.494 35.6005 m
153.084 30.6413 l
153.225 30.5601 153.273 30.3805 153.192 30.2399  c
153.111 30.0993 152.931 30.0511 152.790 30.1323  c
144.200 35.0915 l
144.060 35.1727 144.012 35.3523 144.093 35.4929  c
144.174 35.6335 144.354 35.6817 144.494 35.6005  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
166.509 36.9473 m
166.650 37.0285 166.829 36.9803 166.910 36.8398  c
166.992 36.6992 166.944 36.5195 166.803 36.4383  c
160.025 32.5250 l
159.884 32.4439 159.704 32.4920 159.623 32.6326  c
159.542 32.7732 159.590 32.9529 159.731 33.0340  c
h
169.351 35.6005 m
169.491 35.6817 169.671 35.6335 169.752 35.4929  c
169.833 35.3523 169.785 35.1727 169.645 35.0915  c
161.318 30.2844 l
161.178 30.2032 160.998 30.2514 160.917 30.3920  c
160.836 30.5326 160.884 30.7123 161.024 30.7934  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
156.629 57.1260 m
156.629 65.9979 l
156.629 66.1602 156.760 66.2917 156.922 66.2917  c
157.085 66.2917 157.216 66.1602 157.216 65.9979  c
157.216 57.1260 l
157.216 56.9637 157.085 56.8321 156.922 56.8321  c
156.760 56.8321 156.629 56.9637 156.629 57.1260  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
169.645 35.6005 m
178.235 30.6413 l
178.375 30.5601 178.423 30.3805 178.342 30.2399  c
178.261 30.0993 178.081 30.0511 177.941 30.1323  c
169.351 35.0915 l
169.210 35.1727 169.162 35.3523 169.243 35.4929  c
169.324 35.6335 169.504 35.6817 169.645 35.6005  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
20.0412 37.8410 m
20.1818 37.7598 20.2299 37.5802 20.1488 37.4396  c
20.0676 37.2990 19.8879 37.2509 19.7473 37.3320  c
7.17389 44.5920 l
7.03330 44.6732 6.98517 44.8529 7.06634 44.9935  c
7.14751 45.1341 7.32720 45.1822 7.46778 45.1010  c
h
18.7475 35.6005 m
18.8881 35.5193 18.9362 35.3396 18.8551 35.1991  c
18.7739 35.0585 18.5942 35.0103 18.4536 35.0915  c
5.88019 42.3515 l
5.73961 42.4327 5.69147 42.6124 5.77264 42.7529  c
5.85381 42.8935 6.03350 42.9417 6.17408 42.8605  c
h
17.4538 33.3600 m
17.5944 33.2788 17.6425 33.0991 17.5614 32.9585  c
17.4802 32.8179 17.3005 32.7698 17.1599 32.8510  c
4.58649 40.1110 l
4.44591 40.1922 4.39777 40.3718 4.47895 40.5124  c
4.56012 40.6530 4.73981 40.7011 4.88039 40.6200  c
h
f
Q
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 166.177 42.8660 ] concat
newpath
.765625 11.0000 m
.765625 3.84375 l
1.73438 3.84375 l
5.50000 9.46875 l
5.50000 3.84375 l
6.40625 3.84375 l
6.40625 11.0000 l
5.43750 11.0000 l
1.67188 5.37500 l
1.67188 11.0000 l
.765625 11.0000 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 153.602 21.0860 ] concat
newpath
.765625 11.0000 m
.765625 3.84375 l
1.73438 3.84375 l
5.50000 9.46875 l
5.50000 3.84375 l
6.40625 3.84375 l
6.40625 11.0000 l
5.43750 11.0000 l
1.67188 5.37500 l
1.67188 11.0000 l
.765625 11.0000 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 153.602 64.6460 ] concat
newpath
.765625 11.0000 m
.765625 3.84375 l
1.73438 3.84375 l
5.50000 9.46875 l
5.50000 3.84375 l
6.40625 3.84375 l
6.40625 11.0000 l
5.43750 11.0000 l
1.67188 5.37500 l
1.67188 11.0000 l
.765625 11.0000 l
h
8.01855 11.0000 m
8.01855 3.84375 l
8.97168 3.84375 l
8.97168 6.78125 l
12.6904 6.78125 l
12.6904 3.84375 l
13.6436 3.84375 l
13.6436 11.0000 l
12.6904 11.0000 l
12.6904 7.62500 l
8.97168 7.62500 l
8.97168 11.0000 l
8.01855 11.0000 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 167.758 71.3639 ] concat
newpath
3.01562 5.50000 m
3.01562 6.00000 l
.187500 6.00000 l
.177083 5.87500 .197917 5.75521 .250000 5.64062  c
.322917 5.44271 .437500 5.25000 .593750 5.06250  c
.750000 4.87500 .979167 4.65625 1.28125 4.40625  c
1.75000 4.03125 2.06510 3.73177 2.22656 3.50781  c
2.38802 3.28385 2.46875 3.07292 2.46875 2.87500  c
2.46875 2.65625 2.39583 2.47656 2.25000 2.33594  c
2.10417 2.19531 1.91146 2.12500 1.67188 2.12500  c
1.41146 2.12500 1.20573 2.20052 1.05469 2.35156  c
.903646 2.50260 .828125 2.71354 .828125 2.98438  c
.281250 2.92188 l
.322917 2.52604 .463542 2.22135 .703125 2.00781  c
.942708 1.79427 1.26562 1.68750 1.67188 1.68750  c
2.08854 1.68750 2.41667 1.80208 2.65625 2.03125  c
2.89583 2.26042 3.01562 2.54167 3.01562 2.87500  c
3.01562 3.05208 2.97917 3.22396 2.90625 3.39062  c
2.83333 3.55729 2.71615 3.73177 2.55469 3.91406  c
2.39323 4.09635 2.12500 4.34896 1.75000 4.67188  c
1.42708 4.93229 1.22135 5.10938 1.13281 5.20312  c
1.04427 5.29688 .973958 5.39583 .921875 5.50000  c
3.01562 5.50000 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 178.753 21.0860 ] concat
newpath
.765625 11.0000 m
.765625 3.84375 l
1.73438 3.84375 l
5.50000 9.46875 l
5.50000 3.84375 l
6.40625 3.84375 l
6.40625 11.0000 l
5.43750 11.0000 l
1.67188 5.37500 l
1.67188 11.0000 l
.765625 11.0000 l
h
8.01855 11.0000 m
8.01855 3.84375 l
8.97168 3.84375 l
8.97168 6.78125 l
12.6904 6.78125 l
12.6904 3.84375 l
13.6436 3.84375 l
13.6436 11.0000 l
12.6904 11.0000 l
12.6904 7.62500 l
8.97168 7.62500 l
8.97168 11.0000 l
8.01855 11.0000 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 192.909 27.8039 ] concat
newpath
3.01562 5.50000 m
3.01562 6.00000 l
.187500 6.00000 l
.177083 5.87500 .197917 5.75521 .250000 5.64062  c
.322917 5.44271 .437500 5.25000 .593750 5.06250  c
.750000 4.87500 .979167 4.65625 1.28125 4.40625  c
1.75000 4.03125 2.06510 3.73177 2.22656 3.50781  c
2.38802 3.28385 2.46875 3.07292 2.46875 2.87500  c
2.46875 2.65625 2.39583 2.47656 2.25000 2.33594  c
2.10417 2.19531 1.91146 2.12500 1.67188 2.12500  c
1.41146 2.12500 1.20573 2.20052 1.05469 2.35156  c
.903646 2.50260 .828125 2.71354 .828125 2.98438  c
.281250 2.92188 l
.322917 2.52604 .463542 2.22135 .703125 2.00781  c
.942708 1.79427 1.26562 1.68750 1.67188 1.68750  c
2.08854 1.68750 2.41667 1.80208 2.65625 2.03125  c
2.89583 2.26042 3.01562 2.54167 3.01562 2.87500  c
3.01562 3.05208 2.97917 3.22396 2.90625 3.39062  c
2.83333 3.55729 2.71615 3.73177 2.55469 3.91406  c
2.39323 4.09635 2.12500 4.34896 1.75000 4.67188  c
1.42708 4.93229 1.22135 5.10938 1.13281 5.20312  c
1.04427 5.29688 .973958 5.39583 .921875 5.50000  c
3.01562 5.50000 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 102.702 6.56600 ] concat
newpath
.484375 7.51562 m
.484375 6.32812 .802083 5.39844 1.43750 4.72656  c
2.07292 4.05469 2.89583 3.71875 3.90625 3.71875  c
4.57292 3.71875 5.17188 3.87500 5.70312 4.18750  c
6.23438 4.50000 6.63802 4.94010 6.91406 5.50781  c
7.19010 6.07552 7.32812 6.71875 7.32812 7.43750  c
7.32812 8.15625 7.18229 8.80208 6.89062 9.37500  c
6.59896 9.94792 6.18490 10.3828 5.64844 10.6797  c
5.11198 10.9766 4.53125 11.1250 3.90625 11.1250  c
3.22917 11.1250 2.62500 10.9609 2.09375 10.6328  c
1.56250 10.3047 1.16146 9.85938 .890625 9.29688  c
.619792 8.73438 .484375 8.14062 .484375 7.51562  c
h
1.45312 7.53125 m
1.45312 8.39583 1.68750 9.07552 2.15625 9.57031  c
2.62500 10.0651 3.20833 10.3125 3.90625 10.3125  c
4.61458 10.3125 5.20052 10.0625 5.66406 9.56250  c
6.12760 9.06250 6.35938 8.34896 6.35938 7.42188  c
6.35938 6.83854 6.26042 6.33073 6.06250 5.89844  c
5.86458 5.46615 5.57552 5.13021 5.19531 4.89062  c
4.81510 4.65104 4.39062 4.53125 3.92188 4.53125  c
3.24479 4.53125 2.66406 4.76042 2.17969 5.21875  c
1.69531 5.67708 1.45312 6.44792 1.45312 7.53125  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 77.5529 21.0860 ] concat
newpath
.484375 7.51562 m
.484375 6.32812 .802083 5.39844 1.43750 4.72656  c
2.07292 4.05469 2.89583 3.71875 3.90625 3.71875  c
4.57292 3.71875 5.17188 3.87500 5.70312 4.18750  c
6.23438 4.50000 6.63802 4.94010 6.91406 5.50781  c
7.19010 6.07552 7.32812 6.71875 7.32812 7.43750  c
7.32812 8.15625 7.18229 8.80208 6.89062 9.37500  c
6.59896 9.94792 6.18490 10.3828 5.64844 10.6797  c
5.11198 10.9766 4.53125 11.1250 3.90625 11.1250  c
3.22917 11.1250 2.62500 10.9609 2.09375 10.6328  c
1.56250 10.3047 1.16146 9.85938 .890625 9.29688  c
.619792 8.73438 .484375 8.14062 .484375 7.51562  c
h
1.45312 7.53125 m
1.45312 8.39583 1.68750 9.07552 2.15625 9.57031  c
2.62500 10.0651 3.20833 10.3125 3.90625 10.3125  c
4.61458 10.3125 5.20052 10.0625 5.66406 9.56250  c
6.12760 9.06250 6.35938 8.34896 6.35938 7.42188  c
6.35938 6.83854 6.26042 6.33073 6.06250 5.89844  c
5.86458 5.46615 5.57552 5.13021 5.19531 4.89062  c
4.81510 4.65104 4.39062 4.53125 3.92188 4.53125  c
3.24479 4.53125 2.66406 4.76042 2.17969 5.21875  c
1.69531 5.67708 1.45312 6.44792 1.45312 7.53125  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 77.5529 50.1260 ] concat
newpath
.484375 7.51562 m
.484375 6.32812 .802083 5.39844 1.43750 4.72656  c
2.07292 4.05469 2.89583 3.71875 3.90625 3.71875  c
4.57292 3.71875 5.17188 3.87500 5.70312 4.18750  c
6.23438 4.50000 6.63802 4.94010 6.91406 5.50781  c
7.19010 6.07552 7.32812 6.71875 7.32812 7.43750  c
7.32812 8.15625 7.18229 8.80208 6.89062 9.37500  c
6.59896 9.94792 6.18490 10.3828 5.64844 10.6797  c
5.11198 10.9766 4.53125 11.1250 3.90625 11.1250  c
3.22917 11.1250 2.62500 10.9609 2.09375 10.6328  c
1.56250 10.3047 1.16146 9.85938 .890625 9.29688  c
.619792 8.73438 .484375 8.14062 .484375 7.51562  c
h
1.45312 7.53125 m
1.45312 8.39583 1.68750 9.07552 2.15625 9.57031  c
2.62500 10.0651 3.20833 10.3125 3.90625 10.3125  c
4.61458 10.3125 5.20052 10.0625 5.66406 9.56250  c
6.12760 9.06250 6.35938 8.34896 6.35938 7.42188  c
6.35938 6.83854 6.26042 6.33073 6.06250 5.89844  c
5.86458 5.46615 5.57552 5.13021 5.19531 4.89062  c
4.81510 4.65104 4.39062 4.53125 3.92188 4.53125  c
3.24479 4.53125 2.66406 4.76042 2.17969 5.21875  c
1.69531 5.67708 1.45312 6.44792 1.45312 7.53125  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
q
cliprestore
newpath
0.00000 0.00000 m
0.00000 86.0000 l
202.000 86.0000 l
202.000 0.00000 l
h
W
cliprestore
newpath
0.00000 0.00000 m
0.00000 86.0000 l
202.000 86.0000 l
202.000 0.00000 l
h
W
Q

%%Trailer
%%EOF
