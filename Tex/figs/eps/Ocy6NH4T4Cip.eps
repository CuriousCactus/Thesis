%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 305 575 486
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D
%%For: 
%%Title: 
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
322 104 setsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
322.000 0.00000 l
322.000 104.000 l
0.00000 104.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
322.000 0.00000 l
322.000 104.000 l
0.00000 104.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
322.000 0.00000 l
322.000 104.000 l
0.00000 104.000 l
0.00000 0.00000 l
h
f
cliprestore
0 0 322 104 rc
q
0.00000 0.00000 0.00000 RG
newpath
214.294 51.6262 m
205.706 46.6673 l
205.565 46.5862 205.386 46.6343 205.305 46.7749  c
205.223 46.9155 205.272 47.0952 205.412 47.1763  c
214.000 52.1352 l
214.141 52.2164 214.321 52.1683 214.402 52.0277  c
214.483 51.8871 214.435 51.7074 214.294 51.6262  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
205.412 46.6673 m
192.839 53.9273 l
192.698 54.0085 192.650 54.1882 192.731 54.3288  c
192.812 54.4694 192.992 54.5175 193.133 54.4363  c
205.706 47.1763 l
205.847 47.0952 205.895 46.9155 205.814 46.7749  c
205.732 46.6343 205.553 46.5862 205.412 46.6673  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
192.692 54.1818 m
192.692 63.0537 l
192.692 63.2160 192.823 63.3476 192.986 63.3476  c
193.148 63.3476 193.280 63.2160 193.280 63.0537  c
193.280 54.1818 l
193.280 54.0195 193.148 53.8880 192.986 53.8880  c
192.823 53.8880 192.692 54.0195 192.692 54.1818  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
196.824 71.2574 m
205.412 76.2163 l
205.553 76.2975 205.732 76.2494 205.814 76.1088  c
205.895 75.9682 205.847 75.7885 205.706 75.7073  c
197.118 70.7485 l
196.977 70.6673 196.798 70.7154 196.716 70.8560  c
196.635 70.9966 196.683 71.1763 196.824 71.2574  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
205.706 76.2163 m
218.279 68.9563 l
218.420 68.8752 218.468 68.6955 218.387 68.5549  c
218.306 68.4143 218.126 68.3662 217.986 68.4473  c
205.412 75.7073 l
205.272 75.7885 205.223 75.9682 205.305 76.1088  c
205.386 76.2494 205.565 76.2975 205.706 76.2163  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
218.426 68.7018 m
218.426 59.8300 l
218.426 59.6677 218.295 59.5361 218.133 59.5361  c
217.970 59.5361 217.839 59.6677 217.839 59.8300  c
217.839 68.7018 l
217.839 68.8642 217.970 68.9957 218.133 68.9957  c
218.295 68.9957 218.426 68.8642 218.426 68.7018  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
188.853 70.7481 m
180.264 75.7073 l
180.123 75.7885 180.075 75.9682 180.156 76.1088  c
180.237 76.2494 180.417 76.2975 180.557 76.2163  c
189.147 71.2571 l
189.288 71.1760 189.336 70.9963 189.255 70.8557  c
189.174 70.7151 188.994 70.6670 188.853 70.7481  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
180.557 75.7073 m
167.984 68.4473 l
167.843 68.3662 167.664 68.4143 167.583 68.5549  c
167.501 68.6955 167.549 68.8752 167.690 68.9563  c
180.263 76.2163 l
180.404 76.2975 180.584 76.2494 180.665 76.1088  c
180.746 75.9682 180.698 75.7885 180.557 75.7073  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
167.690 68.4473 m
155.117 75.7073 l
154.976 75.7885 154.928 75.9682 155.009 76.1088  c
155.090 76.2494 155.270 76.2975 155.411 76.2163  c
167.984 68.9563 l
168.125 68.8752 168.173 68.6955 168.091 68.5549  c
168.010 68.4143 167.831 68.3662 167.690 68.4473  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
155.411 75.7073 m
142.837 68.4473 l
142.696 68.3662 142.517 68.4143 142.436 68.5549  c
142.354 68.6955 142.403 68.8752 142.543 68.9563  c
155.117 76.2163 l
155.257 76.2975 155.437 76.2494 155.518 76.1088  c
155.599 75.9682 155.551 75.7885 155.411 75.7073  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
222.265 52.1352 m
230.853 47.1763 l
230.993 47.0952 231.042 46.9155 230.960 46.7749  c
230.879 46.6343 230.700 46.5862 230.559 46.6673  c
221.971 51.6262 l
221.830 51.7074 221.782 51.8871 221.863 52.0277  c
221.944 52.1683 222.124 52.2164 222.265 52.1352  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
233.695 45.3205 m
233.554 45.2394 233.374 45.2875 233.293 45.4281  c
233.212 45.5687 233.260 45.7484 233.401 45.8295  c
242.880 51.3023 l
243.021 51.3834 243.200 51.3353 243.282 51.1947  c
243.363 51.0541 243.315 50.8744 243.174 50.7933  c
h
230.853 46.6673 m
230.712 46.5862 230.533 46.6343 230.451 46.7749  c
230.370 46.9155 230.418 47.0952 230.559 47.1763  c
243.134 54.4363 l
243.275 54.5175 243.454 54.4694 243.536 54.3288  c
243.617 54.1882 243.569 54.0085 243.428 53.9273  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
243.428 54.4364 m
256.012 47.1764 l
256.153 47.0953 256.201 46.9156 256.120 46.7750  c
256.039 46.6344 255.859 46.5862 255.718 46.6673  c
243.134 53.9273 l
242.994 54.0084 242.945 54.1881 243.027 54.3287  c
243.108 54.4693 243.287 54.5175 243.428 54.4364  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
252.984 45.1337 m
252.984 45.2960 253.116 45.4276 253.278 45.4276  c
253.440 45.4276 253.572 45.2960 253.572 45.1337  c
253.572 34.1900 l
253.572 34.0277 253.440 33.8961 253.278 33.8961  c
253.116 33.8961 252.984 34.0277 252.984 34.1900  c
h
255.571 46.9218 m
255.571 47.0842 255.703 47.2157 255.865 47.2157  c
256.027 47.2157 256.159 47.0842 256.159 46.9218  c
256.159 32.4018 l
256.159 32.2395 256.027 32.1080 255.865 32.1080  c
255.703 32.1080 255.571 32.2395 255.571 32.4018  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
256.012 32.1473 m
243.428 24.8873 l
243.287 24.8062 243.108 24.8544 243.027 24.9950  c
242.945 25.1356 242.994 25.3153 243.134 25.3964  c
255.718 32.6564 l
255.859 32.7375 256.039 32.6893 256.120 32.5487  c
256.201 32.4081 256.153 32.2284 256.012 32.1473  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
243.174 28.5304 m
243.315 28.4493 243.363 28.2696 243.282 28.1290  c
243.200 27.9884 243.021 27.9403 242.880 28.0214  c
233.401 33.4942 l
233.260 33.5753 233.212 33.7550 233.293 33.8956  c
233.374 34.0362 233.554 34.0843 233.695 34.0032  c
h
243.428 25.3963 m
243.569 25.3152 243.617 25.1355 243.536 24.9949  c
243.454 24.8543 243.275 24.8062 243.134 24.8873  c
230.559 32.1473 l
230.418 32.2285 230.370 32.4082 230.451 32.5488  c
230.533 32.6894 230.712 32.7375 230.853 32.6563  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
230.412 32.4018 m
230.412 46.9218 l
230.412 47.0842 230.544 47.2157 230.706 47.2157  c
230.868 47.2157 231.000 47.0842 231.000 46.9218  c
231.000 32.4018 l
231.000 32.2395 230.868 32.1080 230.706 32.1080  c
230.544 32.1080 230.412 32.2395 230.412 32.4018  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
255.718 47.1763 m
264.306 52.1352 l
264.447 52.2164 264.627 52.1683 264.708 52.0277  c
264.789 51.8871 264.741 51.7074 264.600 51.6262  c
256.012 46.6673 l
255.872 46.5862 255.692 46.6343 255.611 46.7749  c
255.529 46.9155 255.578 47.0952 255.718 47.1763  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
272.571 52.1352 m
281.159 47.1763 l
281.300 47.0952 281.348 46.9155 281.267 46.7749  c
281.185 46.6343 281.006 46.5862 280.865 46.6673  c
272.277 51.6262 l
272.136 51.7074 272.088 51.8871 272.169 52.0277  c
272.251 52.1683 272.430 52.2164 272.571 52.1352  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
278.131 45.1343 m
278.131 45.2967 278.263 45.4282 278.425 45.4282  c
278.587 45.4282 278.719 45.2967 278.719 45.1343  c
278.719 34.1894 l
278.719 34.0270 278.587 33.8955 278.425 33.8955  c
278.263 33.8955 278.131 34.0270 278.131 34.1894  c
h
280.718 46.9218 m
280.718 47.0842 280.850 47.2157 281.012 47.2157  c
281.174 47.2157 281.306 47.0842 281.306 46.9218  c
281.306 32.4018 l
281.306 32.2395 281.174 32.1080 281.012 32.1080  c
280.850 32.1080 280.718 32.2395 280.718 32.4018  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
281.159 32.1473 m
268.586 24.8873 l
268.445 24.8062 268.265 24.8543 268.184 24.9949  c
268.103 25.1355 268.151 25.3152 268.292 25.3963  c
280.865 32.6563 l
281.006 32.7375 281.185 32.6894 281.267 32.5488  c
281.348 32.4082 281.300 32.2285 281.159 32.1473  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
268.292 24.8873 m
255.718 32.1473 l
255.578 32.2285 255.529 32.4082 255.611 32.5488  c
255.692 32.6894 255.872 32.7375 256.012 32.6563  c
268.586 25.3963 l
268.726 25.3152 268.774 25.1355 268.693 24.9949  c
268.612 24.8543 268.432 24.8062 268.292 24.8873  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
266.851 25.8888 m
266.851 26.0511 266.983 26.1826 267.145 26.1826  c
267.307 26.1826 267.439 26.0511 267.439 25.8888  c
267.439 16.4887 l
267.439 16.3264 267.307 16.1949 267.145 16.1949  c
266.983 16.1949 266.851 16.3264 266.851 16.4887  c
h
269.438 25.8888 m
269.438 26.0511 269.570 26.1826 269.732 26.1826  c
269.895 26.1826 270.026 26.0511 270.026 25.8888  c
270.026 16.4887 l
270.026 16.3264 269.895 16.1949 269.732 16.1949  c
269.570 16.1949 269.438 16.3264 269.438 16.4887  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
268.145 59.8300 m
268.145 68.7018 l
268.145 68.8642 268.276 68.9957 268.439 68.9957  c
268.601 68.9957 268.732 68.8642 268.732 68.7018  c
268.732 59.8300 l
268.732 59.6677 268.601 59.5361 268.439 59.5361  c
268.276 59.5361 268.145 59.6677 268.145 59.8300  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
268.184 68.5549 m
260.924 81.1283 l
260.843 81.2689 260.891 81.4486 261.032 81.5298  c
261.172 81.6109 261.352 81.5628 261.433 81.4222  c
268.693 68.8488 l
268.774 68.7082 268.726 68.5285 268.586 68.4473  c
268.445 68.3662 268.265 68.4143 268.184 68.5549  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
261.179 81.5692 m
275.699 81.5692 l
275.861 81.5692 275.992 81.4376 275.992 81.2753  c
275.992 81.1129 275.861 80.9814 275.699 80.9814  c
261.179 80.9814 l
261.016 80.9814 260.885 81.1129 260.885 81.2753  c
260.885 81.4376 261.016 81.5692 261.179 81.5692  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
275.953 81.1283 m
268.693 68.5549 l
268.612 68.4143 268.432 68.3662 268.292 68.4473  c
268.151 68.5285 268.103 68.7082 268.184 68.8488  c
275.444 81.4222 l
275.525 81.5628 275.705 81.6110 275.846 81.5298  c
275.986 81.4486 276.034 81.2689 275.953 81.1283  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
281.159 32.6563 m
293.734 25.3963 l
293.875 25.3152 293.923 25.1355 293.842 24.9949  c
293.761 24.8543 293.581 24.8062 293.440 24.8873  c
280.865 32.1473 l
280.725 32.2285 280.676 32.4082 280.758 32.5488  c
280.839 32.6894 281.018 32.7375 281.159 32.6563  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
292.000 25.8887 m
292.000 26.0510 292.131 26.1825 292.294 26.1825  c
292.456 26.1825 292.588 26.0510 292.588 25.8887  c
292.588 16.4887 l
292.588 16.3264 292.456 16.1949 292.294 16.1949  c
292.131 16.1949 292.000 16.3264 292.000 16.4887  c
h
294.587 25.8888 m
294.587 26.0511 294.719 26.1826 294.881 26.1826  c
295.043 26.1826 295.175 26.0511 295.175 25.8888  c
295.175 16.4887 l
295.175 16.3264 295.043 16.1949 294.881 16.1949  c
294.719 16.1949 294.587 16.3264 294.587 16.4887  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
293.440 25.3963 m
301.448 30.0201 l
301.589 30.1013 301.768 30.0531 301.850 29.9125  c
301.931 29.7720 301.883 29.5923 301.742 29.5111  c
293.734 24.8873 l
293.594 24.8062 293.414 24.8543 293.333 24.9949  c
293.252 25.1355 293.300 25.3152 293.440 25.3963  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
230.853 32.1473 m
221.858 26.9539 l
221.718 26.8727 221.538 26.9208 221.457 27.0614  c
221.376 27.2020 221.424 27.3817 221.565 27.4629  c
230.559 32.6563 l
230.700 32.7375 230.879 32.6894 230.960 32.5488  c
231.042 32.4082 230.993 32.2285 230.853 32.1473  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
114.983 88.0161 m
114.821 88.0161 114.689 88.1477 114.689 88.3100  c
114.689 88.4723 114.821 88.6039 114.983 88.6039  c
121.511 88.6039 l
121.674 88.6039 121.805 88.4723 121.805 88.3100  c
121.805 88.1477 121.674 88.0161 121.511 88.0161  c
h
114.983 90.6033 m
114.821 90.6033 114.689 90.7349 114.689 90.8972  c
114.689 91.0595 114.821 91.1911 114.983 91.1911  c
121.511 91.1911 l
121.674 91.1911 121.805 91.0595 121.805 90.8972  c
121.805 90.7349 121.674 90.6033 121.511 90.6033  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
127.507 84.3988 m
130.273 75.8801 l
130.323 75.7257 130.239 75.5600 130.084 75.5099  c
129.930 75.4597 129.764 75.5442 129.714 75.6986  c
126.948 84.2172 l
126.897 84.3716 126.982 84.5374 127.136 84.5875  c
127.291 84.6376 127.456 84.5532 127.507 84.3988  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
126.542 76.8434 m
126.673 76.9388 126.857 76.9097 126.952 76.7783  c
127.047 76.6469 127.018 76.4632 126.887 76.3678  c
118.658 70.3926 l
118.526 70.2972 118.343 70.3263 118.247 70.4577  c
118.152 70.5890 118.181 70.7728 118.312 70.8681  c
h
129.821 76.0272 m
129.952 76.1225 130.136 76.0934 130.231 75.9620  c
130.327 75.8307 130.298 75.6469 130.166 75.5516  c
118.420 67.0226 l
118.289 66.9272 118.105 66.9564 118.009 67.0877  c
117.914 67.2191 117.943 67.4028 118.075 67.4982  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
118.075 67.0226 m
110.217 72.7281 l
110.086 72.8235 110.056 73.0072 110.152 73.1386  c
110.247 73.2699 110.431 73.2991 110.562 73.2037  c
118.420 67.4982 l
118.551 67.4028 118.580 67.2191 118.485 67.0877  c
118.390 66.9564 118.206 66.9272 118.075 67.0226  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
107.941 81.1757 m
108.988 84.3988 l
109.038 84.5532 109.204 84.6376 109.358 84.5875  c
109.513 84.5374 109.597 84.3716 109.547 84.2172  c
108.500 80.9942 l
108.450 80.8398 108.284 80.7553 108.130 80.8055  c
107.976 80.8556 107.891 81.0213 107.941 81.1757  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
130.137 76.0460 m
142.833 68.9584 l
142.975 68.8793 143.026 68.7003 142.947 68.5586  c
142.868 68.4169 142.689 68.3661 142.547 68.4452  c
129.850 75.5328 l
129.708 75.6119 129.658 75.7909 129.737 75.9326  c
129.816 76.0743 129.995 76.1251 130.137 76.0460  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
93.3552 68.4505 m
102.369 73.7161 l
102.509 73.7980 102.689 73.7507 102.771 73.6106  c
102.853 73.4704 102.806 73.2905 102.666 73.2086  c
93.6516 67.9430 l
93.5115 67.8611 93.3315 67.9083 93.2497 68.0485  c
93.1678 68.1887 93.2150 68.3686 93.3552 68.4505  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
93.3577 67.9415 m
80.7421 75.1417 l
80.6011 75.2221 80.5520 75.4016 80.6325 75.5426  c
80.7130 75.6835 80.8924 75.7326 81.0334 75.6521  c
93.6491 68.4520 l
93.7901 68.3715 93.8391 68.1920 93.7586 68.0511  c
93.6782 67.9101 93.4987 67.8610 93.3577 67.9415  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
81.0361 75.1432 m
68.5031 67.8128 l
68.3630 67.7309 68.1830 67.7780 68.1011 67.9181  c
68.0191 68.0582 68.0663 68.2382 68.2064 68.3202  c
80.7394 75.6506 l
80.8795 75.7325 81.0594 75.6854 81.1414 75.5453  c
81.2233 75.4051 81.1762 75.2252 81.0361 75.1432  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
68.2091 67.8112 m
55.5952 75.0096 l
55.4542 75.0901 55.4051 75.2695 55.4856 75.4105  c
55.5661 75.5515 55.7455 75.6006 55.8865 75.5201  c
68.5004 68.3217 l
68.6414 68.2413 68.6905 68.0618 68.6100 67.9208  c
68.5295 67.7798 68.3501 67.7308 68.2091 67.8112  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
57.3325 74.5259 m
57.3334 74.3636 57.2026 74.2313 57.0402 74.2304  c
56.8779 74.2295 56.7456 74.3603 56.7447 74.5227  c
56.6916 84.0430 l
56.6907 84.2053 56.8215 84.3376 56.9839 84.3385  c
57.1462 84.3394 57.2785 84.2086 57.2794 84.0463  c
h
54.7453 74.5088 m
54.7462 74.3464 54.6154 74.2142 54.4531 74.2133  c
54.2908 74.2123 54.1585 74.3431 54.1576 74.5055  c
54.1045 84.0286 l
54.1036 84.1909 54.2344 84.3232 54.3967 84.3241  c
54.5590 84.3250 54.6913 84.1942 54.6922 84.0319  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
47.0504 70.4985 m
55.5919 75.5182 l
55.7319 75.6005 55.9119 75.5537 55.9942 75.4138  c
56.0764 75.2738 56.0297 75.0938 55.8897 75.0115  c
47.3482 69.9918 l
47.2083 69.9095 47.0282 69.9563 46.9460 70.0962  c
46.8637 70.2362 46.9105 70.4162 47.0504 70.4985  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
30.6432 75.1646 m
30.7902 75.4191 l
39.9472 72.1019 l
38.9471 70.3698 l
37.9470 68.6378 l
30.4963 74.9101 l
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
30.7901 74.9100 m
18.2061 67.6500 l
18.0655 67.5689 17.8858 67.6171 17.8047 67.7577  c
17.7236 67.8983 17.7718 68.0780 17.9124 68.1591  c
30.4964 75.4191 l
30.6370 75.5002 30.8167 75.4520 30.8978 75.3114  c
30.9789 75.1708 30.9307 74.9911 30.7901 74.9100  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
17.9123 67.6501 m
5.33885 74.9101 l
5.19827 74.9912 5.15013 75.1709 5.23131 75.3115  c
5.31248 75.4521 5.49217 75.5002 5.63275 75.4191  c
18.2062 68.1591 l
18.3468 68.0779 18.3949 67.8982 18.3137 67.7576  c
18.2326 67.6170 18.0529 67.5689 17.9123 67.6501  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
5.19193 75.1646 m
5.19193 89.6846 l
5.19193 89.8469 5.32347 89.9784 5.48580 89.9784  c
5.64813 89.9784 5.77967 89.8469 5.77967 89.6846  c
5.77967 75.1646 l
5.77967 75.0022 5.64813 74.8707 5.48580 74.8707  c
5.32347 74.8707 5.19193 75.0022 5.19193 75.1646  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
5.33885 89.9391 m
17.9123 97.1991 l
18.0529 97.2802 18.2326 97.2321 18.3137 97.0915  c
18.3949 96.9509 18.3468 96.7712 18.2062 96.6901  c
5.63275 89.4301 l
5.49217 89.3489 5.31248 89.3970 5.23131 89.5376  c
5.15013 89.6782 5.19827 89.8579 5.33885 89.9391  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
18.2061 97.1991 m
30.7901 89.9391 l
30.9307 89.8580 30.9789 89.6783 30.8978 89.5377  c
30.8167 89.3971 30.6370 89.3489 30.4964 89.4300  c
17.9124 96.6900 l
17.7718 96.7711 17.7236 96.9508 17.8047 97.0914  c
17.8858 97.2320 18.0655 97.2802 18.2061 97.1991  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
30.9371 89.6846 m
30.9371 75.1646 l
30.9371 75.0022 30.8056 74.8707 30.6432 74.8707  c
30.4809 74.8707 30.3494 75.0022 30.3494 75.1646  c
30.3494 89.6846 l
30.3494 89.8469 30.4809 89.9784 30.6432 89.9784  c
30.8056 89.9784 30.9371 89.8469 30.9371 89.6846  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
16.4718 68.6515 m
16.4718 68.8138 16.6033 68.9454 16.7656 68.9454  c
16.9280 68.9454 17.0595 68.8138 17.0595 68.6515  c
17.0595 59.2515 l
17.0595 59.0891 16.9280 58.9576 16.7656 58.9576  c
16.6033 58.9576 16.4718 59.0891 16.4718 59.2515  c
h
19.0590 68.6509 m
19.0590 68.8132 19.1905 68.9447 19.3528 68.9447  c
19.5152 68.9447 19.6467 68.8132 19.6467 68.6509  c
19.6467 59.2515 l
19.6467 59.0891 19.5152 58.9576 19.3528 58.9576  c
19.1905 58.9576 19.0590 59.0891 19.0590 59.2515  c
h
f
Q
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 214.812 47.1818 ] concat
newpath
.765625 11.0000 m
.765625 3.84375 l
1.73438 3.84375 l
5.50000 9.46875 l
5.50000 3.84375 l
6.40625 3.84375 l
6.40625 11.0000 l
5.43750 11.0000 l
1.67188 5.37500 l
1.67188 11.0000 l
.765625 11.0000 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 189.665 61.7018 ] concat
newpath
.765625 11.0000 m
.765625 3.84375 l
1.73438 3.84375 l
5.50000 9.46875 l
5.50000 3.84375 l
6.40625 3.84375 l
6.40625 11.0000 l
5.43750 11.0000 l
1.67188 5.37500 l
1.67188 11.0000 l
.765625 11.0000 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 265.118 47.1818 ] concat
newpath
.765625 11.0000 m
.765625 3.84375 l
1.73438 3.84375 l
5.50000 9.46875 l
5.50000 3.84375 l
6.40625 3.84375 l
6.40625 11.0000 l
5.43750 11.0000 l
1.67188 5.37500 l
1.67188 11.0000 l
.765625 11.0000 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 264.517 3.62184 ] concat
newpath
.484375 7.51562 m
.484375 6.32812 .802083 5.39844 1.43750 4.72656  c
2.07292 4.05469 2.89583 3.71875 3.90625 3.71875  c
4.57292 3.71875 5.17188 3.87500 5.70312 4.18750  c
6.23438 4.50000 6.63802 4.94010 6.91406 5.50781  c
7.19010 6.07552 7.32812 6.71875 7.32812 7.43750  c
7.32812 8.15625 7.18229 8.80208 6.89062 9.37500  c
6.59896 9.94792 6.18490 10.3828 5.64844 10.6797  c
5.11198 10.9766 4.53125 11.1250 3.90625 11.1250  c
3.22917 11.1250 2.62500 10.9609 2.09375 10.6328  c
1.56250 10.3047 1.16146 9.85938 .890625 9.29688  c
.619792 8.73438 .484375 8.14062 .484375 7.51562  c
h
1.45312 7.53125 m
1.45312 8.39583 1.68750 9.07552 2.15625 9.57031  c
2.62500 10.0651 3.20833 10.3125 3.90625 10.3125  c
4.61458 10.3125 5.20052 10.0625 5.66406 9.56250  c
6.12760 9.06250 6.35938 8.34896 6.35938 7.42188  c
6.35938 6.83854 6.26042 6.33073 6.06250 5.89844  c
5.86458 5.46615 5.57552 5.13021 5.19531 4.89062  c
4.81510 4.65104 4.39062 4.53125 3.92188 4.53125  c
3.24479 4.53125 2.66406 4.76042 2.17969 5.21875  c
1.69531 5.67708 1.45312 6.44792 1.45312 7.53125  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 289.665 3.62184 ] concat
newpath
.484375 7.51562 m
.484375 6.32812 .802083 5.39844 1.43750 4.72656  c
2.07292 4.05469 2.89583 3.71875 3.90625 3.71875  c
4.57292 3.71875 5.17188 3.87500 5.70312 4.18750  c
6.23438 4.50000 6.63802 4.94010 6.91406 5.50781  c
7.19010 6.07552 7.32812 6.71875 7.32812 7.43750  c
7.32812 8.15625 7.18229 8.80208 6.89062 9.37500  c
6.59896 9.94792 6.18490 10.3828 5.64844 10.6797  c
5.11198 10.9766 4.53125 11.1250 3.90625 11.1250  c
3.22917 11.1250 2.62500 10.9609 2.09375 10.6328  c
1.56250 10.3047 1.16146 9.85938 .890625 9.29688  c
.619792 8.73438 .484375 8.14062 .484375 7.51562  c
h
1.45312 7.53125 m
1.45312 8.39583 1.68750 9.07552 2.15625 9.57031  c
2.62500 10.0651 3.20833 10.3125 3.90625 10.3125  c
4.61458 10.3125 5.20052 10.0625 5.66406 9.56250  c
6.12760 9.06250 6.35938 8.34896 6.35938 7.42188  c
6.35938 6.83854 6.26042 6.33073 6.06250 5.89844  c
5.86458 5.46615 5.57552 5.13021 5.19531 4.89062  c
4.81510 4.65104 4.39062 4.53125 3.92188 4.53125  c
3.24479 4.53125 2.66406 4.76042 2.17969 5.21875  c
1.69531 5.67708 1.45312 6.44792 1.45312 7.53125  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 302.239 25.4018 ] concat
newpath
.484375 7.51562 m
.484375 6.32812 .802083 5.39844 1.43750 4.72656  c
2.07292 4.05469 2.89583 3.71875 3.90625 3.71875  c
4.57292 3.71875 5.17188 3.87500 5.70312 4.18750  c
6.23438 4.50000 6.63802 4.94010 6.91406 5.50781  c
7.19010 6.07552 7.32812 6.71875 7.32812 7.43750  c
7.32812 8.15625 7.18229 8.80208 6.89062 9.37500  c
6.59896 9.94792 6.18490 10.3828 5.64844 10.6797  c
5.11198 10.9766 4.53125 11.1250 3.90625 11.1250  c
3.22917 11.1250 2.62500 10.9609 2.09375 10.6328  c
1.56250 10.3047 1.16146 9.85938 .890625 9.29688  c
.619792 8.73438 .484375 8.14062 .484375 7.51562  c
h
1.45312 7.53125 m
1.45312 8.39583 1.68750 9.07552 2.15625 9.57031  c
2.62500 10.0651 3.20833 10.3125 3.90625 10.3125  c
4.61458 10.3125 5.20052 10.0625 5.66406 9.56250  c
6.12760 9.06250 6.35938 8.34896 6.35938 7.42188  c
6.35938 6.83854 6.26042 6.33073 6.06250 5.89844  c
5.86458 5.46615 5.57552 5.13021 5.19531 4.89062  c
4.81510 4.65104 4.39062 4.53125 3.92188 4.53125  c
3.24479 4.53125 2.66406 4.76042 2.17969 5.21875  c
1.69531 5.67708 1.45312 6.44792 1.45312 7.53125  c
h
8.57520 11.0000 m
8.57520 3.84375 l
9.52832 3.84375 l
9.52832 6.78125 l
13.2471 6.78125 l
13.2471 3.84375 l
14.2002 3.84375 l
14.2002 11.0000 l
13.2471 11.0000 l
13.2471 7.62500 l
9.52832 7.62500 l
9.52832 11.0000 l
8.57520 11.0000 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 215.218 18.1418 ] concat
newpath
.828125 11.0000 m
.828125 3.84375 l
5.65625 3.84375 l
5.65625 4.68750 l
1.76562 4.68750 l
1.76562 6.90625 l
5.12500 6.90625 l
5.12500 7.75000 l
1.76562 7.75000 l
1.76562 11.0000 l
.828125 11.0000 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 107.667 82.6036 ] concat
newpath
.765625 11.0000 m
.765625 3.84375 l
1.73438 3.84375 l
5.50000 9.46875 l
5.50000 3.84375 l
6.40625 3.84375 l
6.40625 11.0000 l
5.43750 11.0000 l
1.67188 5.37500 l
1.67188 11.0000 l
.765625 11.0000 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 122.187 82.6036 ] concat
newpath
.765625 11.0000 m
.765625 3.84375 l
1.73438 3.84375 l
5.50000 9.46875 l
5.50000 3.84375 l
6.40625 3.84375 l
6.40625 11.0000 l
5.43750 11.0000 l
1.67188 5.37500 l
1.67188 11.0000 l
.765625 11.0000 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 103.181 68.7894 ] concat
newpath
.765625 11.0000 m
.765625 3.84375 l
1.73438 3.84375 l
5.50000 9.46875 l
5.50000 3.84375 l
6.40625 3.84375 l
6.40625 11.0000 l
5.43750 11.0000 l
1.67188 5.37500 l
1.67188 11.0000 l
.765625 11.0000 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 51.7380 82.7849 ] concat
newpath
.484375 7.51562 m
.484375 6.32812 .802083 5.39844 1.43750 4.72656  c
2.07292 4.05469 2.89583 3.71875 3.90625 3.71875  c
4.57292 3.71875 5.17188 3.87500 5.70312 4.18750  c
6.23438 4.50000 6.63802 4.94010 6.91406 5.50781  c
7.19010 6.07552 7.32812 6.71875 7.32812 7.43750  c
7.32812 8.15625 7.18229 8.80208 6.89062 9.37500  c
6.59896 9.94792 6.18490 10.3828 5.64844 10.6797  c
5.11198 10.9766 4.53125 11.1250 3.90625 11.1250  c
3.22917 11.1250 2.62500 10.9609 2.09375 10.6328  c
1.56250 10.3047 1.16146 9.85938 .890625 9.29688  c
.619792 8.73438 .484375 8.14062 .484375 7.51562  c
h
1.45312 7.53125 m
1.45312 8.39583 1.68750 9.07552 2.15625 9.57031  c
2.62500 10.0651 3.20833 10.3125 3.90625 10.3125  c
4.61458 10.3125 5.20052 10.0625 5.66406 9.56250  c
6.12760 9.06250 6.35938 8.34896 6.35938 7.42188  c
6.35938 6.83854 6.26042 6.33073 6.06250 5.89844  c
5.86458 5.46615 5.57552 5.13021 5.19531 4.89062  c
4.81510 4.65104 4.39062 4.53125 3.92188 4.53125  c
3.24479 4.53125 2.66406 4.76042 2.17969 5.21875  c
1.69531 5.67708 1.45312 6.44792 1.45312 7.53125  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 39.8974 50.5558 ] concat
newpath
.796875 11.0000 m
.796875 3.84375 l
1.75000 3.84375 l
1.75000 6.78125 l
5.46875 6.78125 l
5.46875 3.84375 l
6.42188 3.84375 l
6.42188 11.0000 l
5.46875 11.0000 l
5.46875 7.62500 l
1.75000 7.62500 l
1.75000 11.0000 l
.796875 11.0000 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 39.8964 60.9046 ] concat
newpath
.765625 11.0000 m
.765625 3.84375 l
1.73438 3.84375 l
5.50000 9.46875 l
5.50000 3.84375 l
6.40625 3.84375 l
6.40625 11.0000 l
5.43750 11.0000 l
1.67188 5.37500 l
1.67188 11.0000 l
.765625 11.0000 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 14.1374 46.3846 ] concat
newpath
.484375 7.51562 m
.484375 6.32812 .802083 5.39844 1.43750 4.72656  c
2.07292 4.05469 2.89583 3.71875 3.90625 3.71875  c
4.57292 3.71875 5.17188 3.87500 5.70312 4.18750  c
6.23438 4.50000 6.63802 4.94010 6.91406 5.50781  c
7.19010 6.07552 7.32812 6.71875 7.32812 7.43750  c
7.32812 8.15625 7.18229 8.80208 6.89062 9.37500  c
6.59896 9.94792 6.18490 10.3828 5.64844 10.6797  c
5.11198 10.9766 4.53125 11.1250 3.90625 11.1250  c
3.22917 11.1250 2.62500 10.9609 2.09375 10.6328  c
1.56250 10.3047 1.16146 9.85938 .890625 9.29688  c
.619792 8.73438 .484375 8.14062 .484375 7.51562  c
h
1.45312 7.53125 m
1.45312 8.39583 1.68750 9.07552 2.15625 9.57031  c
2.62500 10.0651 3.20833 10.3125 3.90625 10.3125  c
4.61458 10.3125 5.20052 10.0625 5.66406 9.56250  c
6.12760 9.06250 6.35938 8.34896 6.35938 7.42188  c
6.35938 6.83854 6.26042 6.33073 6.06250 5.89844  c
5.86458 5.46615 5.57552 5.13021 5.19531 4.89062  c
4.81510 4.65104 4.39062 4.53125 3.92188 4.53125  c
3.24479 4.53125 2.66406 4.76042 2.17969 5.21875  c
1.69531 5.67708 1.45312 6.44792 1.45312 7.53125  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
Q
1.00000 1.00000 1.00000 RG
q
cliprestore
newpath
0.00000 0.00000 m
0.00000 104.000 l
322.000 104.000 l
322.000 0.00000 l
h
W
cliprestore
newpath
0.00000 0.00000 m
0.00000 104.000 l
322.000 104.000 l
322.000 0.00000 l
h
W
Q

%%Trailer
%%EOF
