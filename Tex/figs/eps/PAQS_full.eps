%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 100 575 691
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D
%%For: 
%%Title: 
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
816 866 setsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
816.000 0.00000 l
816.000 866.000 l
0.00000 866.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
816.000 0.00000 l
816.000 866.000 l
0.00000 866.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
816.000 0.00000 l
816.000 866.000 l
0.00000 866.000 l
0.00000 0.00000 l
h
f
cliprestore
0 0 816 866 rc
q
0.00000 0.00000 0.00000 RG
newpath
37.9376 84.4229 m
23.4176 84.4229 l
23.2552 84.4229 23.1237 84.5544 23.1237 84.7168  c
23.1237 84.8791 23.2552 85.0106 23.4176 85.0106  c
37.9376 85.0106 l
38.0999 85.0106 38.2315 84.8791 38.2315 84.7168  c
38.2315 84.5544 38.0999 84.4229 37.9376 84.4229  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
276.923 844.371 m
262.403 844.371 l
262.241 844.371 262.110 844.502 262.110 844.665  c
262.110 844.827 262.241 844.959 262.403 844.959  c
276.923 844.959 l
277.086 844.959 277.217 844.827 277.217 844.665  c
277.217 844.502 277.086 844.371 276.923 844.371  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
355.817 791.965 m
341.297 791.965 l
341.134 791.965 341.003 792.097 341.003 792.259  c
341.003 792.421 341.134 792.553 341.297 792.553  c
355.817 792.553 l
355.979 792.553 356.110 792.421 356.110 792.259  c
356.110 792.097 355.979 791.965 355.817 791.965  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
358.650 858.764 m
344.130 858.764 l
343.968 858.764 343.836 858.896 343.836 859.058  c
343.836 859.221 343.968 859.352 344.130 859.352  c
358.650 859.352 l
358.813 859.352 358.944 859.221 358.944 859.058  c
358.944 858.896 358.813 858.764 358.650 858.764  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
537.967 525.754 m
514.601 525.754 l
514.439 525.754 514.308 525.885 514.308 526.047  c
514.308 526.210 514.439 526.341 514.601 526.341  c
537.967 526.341 l
538.129 526.341 538.261 526.210 538.261 526.047  c
538.261 525.885 538.129 525.754 537.967 525.754  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
514.143 524.529 m
514.143 514.361 l
514.143 514.199 514.011 514.067 513.849 514.067  c
513.687 514.067 513.555 514.199 513.555 514.361  c
513.555 524.529 l
513.555 524.691 513.687 524.822 513.849 524.822  c
514.011 524.822 514.143 524.691 514.143 524.529  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
529.515 386.094 m
506.150 386.094 l
505.987 386.094 505.856 386.226 505.856 386.388  c
505.856 386.551 505.987 386.682 506.150 386.682  c
529.515 386.682 l
529.678 386.682 529.809 386.551 529.809 386.388  c
529.809 386.226 529.678 386.094 529.515 386.094  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
505.684 384.869 m
505.684 374.702 l
505.684 374.540 505.553 374.408 505.390 374.408  c
505.228 374.408 505.096 374.540 505.096 374.702  c
505.096 384.869 l
505.096 385.032 505.228 385.163 505.390 385.163  c
505.553 385.163 505.684 385.032 505.684 384.869  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
54.4897 17.4692 m
31.1241 17.4692 l
30.9617 17.4692 30.8302 17.6007 30.8302 17.7630  c
30.8302 17.9254 30.9617 18.0569 31.1241 18.0569  c
54.4897 18.0569 l
54.6520 18.0569 54.7835 17.9254 54.7835 17.7630  c
54.7835 17.6007 54.6520 17.4692 54.4897 17.4692  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
30.6585 16.2513 m
30.6585 6.08376 l
30.6585 5.92142 30.5270 5.78988 30.3647 5.78988  c
30.2023 5.78988 30.0708 5.92142 30.0708 6.08376  c
30.0708 16.2513 l
30.0708 16.4136 30.2023 16.5451 30.3647 16.5451  c
30.5270 16.5451 30.6585 16.4136 30.6585 16.2513  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
31.3727 16.6640 m
38.6925 9.89970 l
38.8117 9.78952 38.8191 9.60364 38.7089 9.48442  c
38.5987 9.36520 38.4128 9.35787 38.2936 9.46804  c
30.9738 16.2323 l
30.8546 16.3425 30.8473 16.5284 30.9575 16.6476  c
31.0676 16.7668 31.2535 16.7742 31.3727 16.6640  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
5.51544 521.173 m
38.6478 521.173 l
38.8101 521.173 38.9416 521.042 38.9416 520.879  c
38.9416 520.717 38.8101 520.585 38.6478 520.585  c
5.51544 520.585 l
5.35310 520.585 5.22157 520.717 5.22157 520.879  c
5.22157 521.042 5.35310 521.173 5.51544 521.173  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
10.4249 514.994 m
10.4249 519.796 l
10.4249 519.959 10.5564 520.090 10.7187 520.090  c
10.8811 520.090 11.0126 519.959 11.0126 519.796  c
11.0126 514.994 l
11.0126 514.832 10.8811 514.700 10.7187 514.700  c
10.5564 514.700 10.4249 514.832 10.4249 514.994  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
167.218 535.792 m
200.351 535.792 l
200.513 535.792 200.645 535.660 200.645 535.498  c
200.645 535.335 200.513 535.204 200.351 535.204  c
167.218 535.204 l
167.056 535.204 166.924 535.335 166.924 535.498  c
166.924 535.660 167.056 535.792 167.218 535.792  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
172.128 529.619 m
172.128 534.422 l
172.128 534.584 172.259 534.716 172.422 534.716  c
172.584 534.716 172.715 534.584 172.715 534.422  c
172.715 529.619 l
172.715 529.457 172.584 529.326 172.422 529.326  c
172.259 529.326 172.128 529.457 172.128 529.619  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
171.929 631.870 m
205.062 631.870 l
205.224 631.870 205.356 631.738 205.356 631.576  c
205.356 631.413 205.224 631.282 205.062 631.282  c
171.929 631.282 l
171.767 631.282 171.636 631.413 171.636 631.576  c
171.636 631.738 171.767 631.870 171.929 631.870  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
176.839 625.698 m
176.839 630.500 l
176.839 630.662 176.970 630.794 177.133 630.794  c
177.295 630.794 177.427 630.662 177.427 630.500  c
177.427 625.698 l
177.427 625.535 177.295 625.404 177.133 625.404  c
176.970 625.404 176.839 625.535 176.839 625.698  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
530.275 208.486 m
506.909 208.486 l
506.747 208.486 506.615 208.618 506.615 208.780  c
506.615 208.942 506.747 209.074 506.909 209.074  c
530.275 209.074 l
530.437 209.074 530.568 208.942 530.568 208.780  c
530.568 208.618 530.437 208.486 530.275 208.486  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
506.450 207.268 m
506.450 197.094 l
506.450 196.931 506.319 196.800 506.157 196.800  c
505.994 196.800 505.863 196.931 505.863 197.094  c
505.863 207.268 l
505.863 207.431 505.994 207.562 506.157 207.562  c
506.319 207.562 506.450 207.431 506.450 207.268  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
507.158 207.681 m
514.478 200.910 l
514.597 200.799 514.604 200.614 514.494 200.494  c
514.383 200.375 514.198 200.368 514.078 200.478  c
506.759 207.250 l
506.639 207.360 506.632 207.546 506.742 207.665  c
506.853 207.784 507.039 207.791 507.158 207.681  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
495.277 664.814 m
495.277 657.796 l
495.277 657.634 495.146 657.502 494.984 657.502  c
494.821 657.502 494.690 657.634 494.690 657.796  c
494.690 664.814 l
494.690 664.976 494.821 665.107 494.984 665.107  c
495.146 665.107 495.277 664.976 495.277 664.814  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
22.7074 52.1104 m
55.8397 52.1104 l
56.0021 52.1104 56.1336 51.9788 56.1336 51.8165  c
56.1336 51.6541 56.0021 51.5226 55.8397 51.5226  c
22.7074 51.5226 l
22.5451 51.5226 22.4135 51.6541 22.4135 51.8165  c
22.4135 51.9788 22.5451 52.1104 22.7074 52.1104  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
27.6239 45.9382 m
27.6239 50.7407 l
27.6239 50.9030 27.7554 51.0345 27.9177 51.0345  c
28.0801 51.0345 28.2116 50.9030 28.2116 50.7407  c
28.2116 45.9382 l
28.2116 45.7758 28.0801 45.6443 27.9177 45.6443  c
27.7554 45.6443 27.6239 45.7758 27.6239 45.9382  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
530.275 298.398 m
506.909 298.398 l
506.747 298.398 506.615 298.529 506.615 298.692  c
506.615 298.854 506.747 298.986 506.909 298.986  c
530.275 298.986 l
530.437 298.986 530.568 298.854 530.568 298.692  c
530.568 298.529 530.437 298.398 530.275 298.398  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
506.450 297.180 m
506.450 287.012 l
506.450 286.850 506.319 286.718 506.157 286.718  c
505.994 286.718 505.863 286.850 505.863 287.012  c
505.863 297.180 l
505.863 297.342 505.994 297.474 506.157 297.474  c
506.319 297.474 506.450 297.342 506.450 297.180  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
507.158 297.600 m
514.478 290.828 l
514.597 290.718 514.604 290.532 514.494 290.413  c
514.383 290.294 514.198 290.287 514.078 290.397  c
506.759 297.168 l
506.639 297.278 506.632 297.464 506.742 297.583  c
506.853 297.703 507.039 297.710 507.158 297.600  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
530.275 440.961 m
506.909 440.961 l
506.747 440.961 506.615 441.093 506.615 441.255  c
506.615 441.417 506.747 441.549 506.909 441.549  c
530.275 441.549 l
530.437 441.549 530.568 441.417 530.568 441.255  c
530.568 441.093 530.437 440.961 530.275 440.961  c
h
f
Q
q
0.00000 0.00000 0.00000 RG
newpath
506.450 439.736 m
506.450 429.569 l
506.450 429.406 506.319 429.275 506.157 429.275  c
505.994 429.275 505.863 429.406 505.863 429.569  c
505.863 439.736 l
505.863 439.898 505.994 440.030 506.157 440.030  c
506.319 440.030 506.450 439.898 506.450 439.736  c
h
f
Q
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 80.8453 6.80644 ] concat
newpath
.765625 11.0000 m
.765625 3.84375 l
3.46875 3.84375 l
3.94792 3.84375 4.31250 3.86458 4.56250 3.90625  c
4.91667 3.96875 5.21094 4.08073 5.44531 4.24219  c
5.67969 4.40365 5.86979 4.63281 6.01562 4.92969  c
6.16146 5.22656 6.23438 5.55208 6.23438 5.90625  c
6.23438 6.52083 6.04167 7.03906 5.65625 7.46094  c
5.27083 7.88281 4.57292 8.09375 3.56250 8.09375  c
1.71875 8.09375 l
1.71875 11.0000 l
.765625 11.0000 l
h
1.71875 7.25000 m
3.56250 7.25000 l
4.17708 7.25000 4.61458 7.13542 4.87500 6.90625  c
5.13542 6.67708 5.26562 6.35417 5.26562 5.93750  c
5.26562 5.63542 5.19010 5.38021 5.03906 5.17188  c
4.88802 4.96354 4.68750 4.82292 4.43750 4.75000  c
4.27083 4.70833 3.97396 4.68750 3.54688 4.68750  c
1.71875 4.68750 l
1.71875 7.25000 l
h
12.8730 10.2344 m
13.3105 10.5365 13.7116 10.7552 14.0762 10.8906  c
13.8105 11.5625 l
13.2897 11.3750 12.7741 11.0781 12.2637 10.6719  c
11.7324 10.9740 11.1491 11.1250 10.5137 11.1250  c
9.85742 11.1250 9.26628 10.9688 8.74023 10.6562  c
8.21419 10.3438 7.81055 9.90365 7.52930 9.33594  c
7.24805 8.76823 7.10742 8.13021 7.10742 7.42188  c
7.10742 6.71354 7.25065 6.07031 7.53711 5.49219  c
7.82357 4.91406 8.22982 4.47396 8.75586 4.17188  c
9.28190 3.86979 9.87305 3.71875 10.5293 3.71875  c
11.1855 3.71875 11.7793 3.87500 12.3105 4.18750  c
12.8418 4.50000 13.2480 4.93750 13.5293 5.50000  c
13.8105 6.06250 13.9512 6.70312 13.9512 7.42188  c
13.9512 8.00521 13.8600 8.53125 13.6777 9.00000  c
13.4954 9.46875 13.2272 9.88021 12.8730 10.2344  c
h
10.7793 9.01562 m
11.3314 9.17188 11.7845 9.40104 12.1387 9.70312  c
12.6908 9.19271 12.9668 8.43229 12.9668 7.42188  c
12.9668 6.83854 12.8678 6.33073 12.6699 5.89844  c
12.4720 5.46615 12.1855 5.13021 11.8105 4.89062  c
11.4355 4.65104 11.0085 4.53125 10.5293 4.53125  c
9.82096 4.53125 9.23503 4.77344 8.77148 5.25781  c
8.30794 5.74219 8.07617 6.46354 8.07617 7.42188  c
8.07617 8.34896 8.30534 9.06250 8.76367 9.56250  c
9.22201 10.0625 9.81055 10.3125 10.5293 10.3125  c
10.8730 10.3125 11.1908 10.2500 11.4824 10.1250  c
11.1908 9.92708 10.8783 9.78646 10.5449 9.70312  c
10.7793 9.01562 l
h
14.9014 8.70312 m
15.7920 8.62500 l
15.8337 8.97917 15.9326 9.27083 16.0889 9.50000  c
16.2451 9.72917 16.4847 9.91406 16.8076 10.0547  c
17.1305 10.1953 17.4951 10.2656 17.9014 10.2656  c
18.2660 10.2656 18.5863 10.2135 18.8623 10.1094  c
19.1383 10.0052 19.3441 9.85938 19.4795 9.67188  c
19.6149 9.48438 19.6826 9.28125 19.6826 9.06250  c
19.6826 8.83333 19.6175 8.63542 19.4873 8.46875  c
19.3571 8.30208 19.1410 8.16146 18.8389 8.04688  c
18.6514 7.97396 18.2295 7.85677 17.5732 7.69531  c
16.9170 7.53385 16.4535 7.38542 16.1826 7.25000  c
15.8389 7.07292 15.5837 6.85156 15.4170 6.58594  c
15.2503 6.32031 15.1670 6.02083 15.1670 5.68750  c
15.1670 5.33333 15.2712 4.99740 15.4795 4.67969  c
15.6878 4.36198 15.9873 4.12240 16.3779 3.96094  c
16.7686 3.79948 17.2087 3.71875 17.6982 3.71875  c
18.2191 3.71875 18.6826 3.80469 19.0889 3.97656  c
19.4951 4.14844 19.8076 4.40104 20.0264 4.73438  c
20.2451 5.06771 20.3649 5.44271 20.3857 5.85938  c
19.4795 5.92188 l
19.4274 5.47396 19.2607 5.13281 18.9795 4.89844  c
18.6982 4.66406 18.2816 4.54688 17.7295 4.54688  c
17.1566 4.54688 16.7399 4.65365 16.4795 4.86719  c
16.2191 5.08073 16.0889 5.33333 16.0889 5.62500  c
16.0889 5.88542 16.1826 6.09896 16.3701 6.26562  c
16.5472 6.43229 17.0212 6.60156 17.7920 6.77344  c
18.5628 6.94531 19.0889 7.09896 19.3701 7.23438  c
19.7868 7.42188 20.0941 7.66406 20.2920 7.96094  c
20.4899 8.25781 20.5889 8.59896 20.5889 8.98438  c
20.5889 9.35938 20.4821 9.71615 20.2686 10.0547  c
20.0550 10.3932 19.7425 10.6562 19.3311 10.8438  c
18.9196 11.0312 18.4587 11.1250 17.9482 11.1250  c
17.3024 11.1250 16.7607 11.0312 16.3232 10.8438  c
15.8857 10.6562 15.5420 10.3724 15.2920 9.99219  c
15.0420 9.61198 14.9118 9.18229 14.9014 8.70312  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 803.798 625.602 ] concat
newpath
5.87500 8.48438 m
6.82812 8.73438 l
6.63021 9.50521 6.27344 10.0964 5.75781 10.5078  c
5.24219 10.9193 4.60938 11.1250 3.85938 11.1250  c
3.08854 11.1250 2.46094 10.9661 1.97656 10.6484  c
1.49219 10.3307 1.12500 9.87500 .875000 9.28125  c
.625000 8.68750 .500000 8.04688 .500000 7.35938  c
.500000 6.61979 .643229 5.97135 .929688 5.41406  c
1.21615 4.85677 1.62240 4.43490 2.14844 4.14844  c
2.67448 3.86198 3.25000 3.71875 3.87500 3.71875  c
4.59375 3.71875 5.19792 3.90104 5.68750 4.26562  c
6.17708 4.63021 6.51562 5.14062 6.70312 5.79688  c
5.76562 6.03125 l
5.59896 5.51042 5.35938 5.13021 5.04688 4.89062  c
4.73438 4.65104 4.33854 4.53125 3.85938 4.53125  c
3.30729 4.53125 2.84635 4.66406 2.47656 4.92969  c
2.10677 5.19531 1.84635 5.54948 1.69531 5.99219  c
1.54427 6.43490 1.46875 6.89062 1.46875 7.35938  c
1.46875 7.97396 1.55729 8.50781 1.73438 8.96094  c
1.91146 9.41406 2.18750 9.75260 2.56250 9.97656  c
2.93750 10.2005 3.34375 10.3125 3.78125 10.3125  c
4.31250 10.3125 4.76302 10.1589 5.13281 9.85156  c
5.50260 9.54427 5.75000 9.08854 5.87500 8.48438  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 598.511 233.942 ] concat
newpath
.828125 11.0000 m
.828125 3.84375 l
5.65625 3.84375 l
5.65625 4.68750 l
1.76562 4.68750 l
1.76562 6.90625 l
5.12500 6.90625 l
5.12500 7.75000 l
1.76562 7.75000 l
1.76562 11.0000 l
.828125 11.0000 l
h
10.3115 9.32812 m
11.2334 9.43750 l
11.0876 9.96875 10.8193 10.3828 10.4287 10.6797  c
10.0381 10.9766 9.54590 11.1250 8.95215 11.1250  c
8.19173 11.1250 7.58757 10.8906 7.13965 10.4219  c
6.69173 9.95312 6.46777 9.29688 6.46777 8.45312  c
6.46777 7.57812 6.69434 6.90104 7.14746 6.42188  c
7.60059 5.94271 8.18132 5.70312 8.88965 5.70312  c
9.58757 5.70312 10.1553 5.93750 10.5928 6.40625  c
11.0303 6.87500 11.2490 7.53646 11.2490 8.39062  c
11.2490 8.44271 11.2490 8.52083 11.2490 8.62500  c
7.38965 8.62500 l
7.42090 9.19792 7.57975 9.63542 7.86621 9.93750  c
8.15267 10.2396 8.51465 10.3906 8.95215 10.3906  c
9.27507 10.3906 9.55111 10.3073 9.78027 10.1406  c
10.0094 9.97396 10.1865 9.70312 10.3115 9.32812  c
h
7.43652 7.90625 m
10.3271 7.90625 l
10.2855 7.46875 10.1761 7.14062 9.99902 6.92188  c
9.71777 6.58854 9.35319 6.42188 8.90527 6.42188  c
8.49902 6.42188 8.16048 6.55729 7.88965 6.82812  c
7.61882 7.09896 7.46777 7.45833 7.43652 7.90625  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
newpath
615.416 234.445 m
615.416 236.036 l
613.825 236.036 l
613.825 236.566 l
615.416 236.566 l
615.416 238.156 l
615.946 238.156 l
615.946 236.566 l
617.536 236.566 l
617.536 236.036 l
615.946 236.036 l
615.946 234.445 l
h
618.597 233.385 m
618.597 239.217 l
612.765 239.217 l
612.765 233.385 l
h
608.671 233.385 m
608.671 239.244 l
606.796 239.244 l
606.796 233.385 l
h
606.796 233.385 m
606.796 233.385 l
606.796 239.244 l
606.796 239.244 l
608.671 239.244 l
608.671 239.244 l
608.671 233.385 l
608.671 233.385 l
h
612.765 233.385 m
612.765 233.385 l
612.765 237.553 l
612.765 237.553 l
612.764 237.180 612.670 236.871 612.483 236.627  c
612.296 236.382 612.030 236.218 611.687 236.135  c
611.947 236.020 612.145 235.861 612.280 235.658  c
612.416 235.455 612.483 235.229 612.483 234.979  c
612.483 234.718 612.413 234.473 612.273 234.244  c
612.132 234.015 611.929 233.833 611.663 233.697  c
611.398 233.562 611.108 233.494 610.796 233.494  c
610.348 233.494 609.970 233.624 609.663 233.885  c
609.356 234.145 609.161 234.510 609.077 234.979  c
609.780 235.104 l
609.832 234.760 609.950 234.502 610.132 234.330  c
610.314 234.158 610.541 234.072 610.812 234.072  c
611.093 234.072 611.319 234.156 611.491 234.322  c
611.663 234.489 611.749 234.703 611.749 234.963  c
611.749 235.286 611.629 235.525 611.390 235.682  c
611.150 235.838 610.885 235.916 610.593 235.916  c
610.468 235.916 l
610.390 236.525 l
610.588 236.473 610.754 236.447 610.890 236.447  c
611.213 236.447 611.481 236.554 611.694 236.768  c
611.908 236.981 612.015 237.249 612.015 237.572  c
612.015 237.906 611.900 238.187 611.671 238.416  c
611.442 238.645 611.161 238.760 610.827 238.760  c
610.556 238.760 610.322 238.671 610.124 238.494  c
609.926 238.317 609.791 238.031 609.718 237.635  c
609.015 237.729 l
609.056 238.208 609.244 238.598 609.577 238.900  c
609.911 239.203 610.327 239.354 610.827 239.354  c
611.390 239.354 611.853 239.179 612.218 238.830  c
612.582 238.482 612.764 238.059 612.765 237.560  c
612.765 239.217 l
612.765 239.217 l
618.597 239.217 l
618.597 239.217 l
618.597 233.385 l
618.597 233.385 l
h
f
q
Q
1.00000 1.00000 1.00000 RG
0.00000 0.00000 0.00000 RG
q
cliprestore
newpath
0.00000 0.00000 m
0.00000 866.000 l
816.000 866.000 l
816.000 0.00000 l
h
W
cliprestore
newpath
0.00000 0.00000 m
0.00000 866.000 l
816.000 866.000 l
816.000 0.00000 l
h
W
Q

%%Trailer
%%EOF
